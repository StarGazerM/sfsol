DIGEST 615113704a506093099a27a74e7ab739
FImp
R40:44 SfLib <> <> lib
mod 55:58 <> AExp
ind 72:75 AExp aexp
constr 91:94 AExp ANum
constr 114:118 AExp APlus
constr 147:152 AExp AMinus
constr 181:185 AExp AMult
R105:108 Imp <> aexp ind
R98:100 Coq.Init.Datatypes <> nat ind
R138:141 Imp <> aexp ind
R130:133 Imp <> aexp ind
R122:125 Imp <> aexp ind
R172:175 Imp <> aexp ind
R164:167 Imp <> aexp ind
R156:159 Imp <> aexp ind
R205:208 Imp <> aexp ind
R197:200 Imp <> aexp ind
R189:192 Imp <> aexp ind
ind 222:225 AExp bexp
constr 241:245 AExp BTrue
constr 258:263 AExp BFalse
constr 276:278 AExp BEq
constr 307:309 AExp BLe
constr 338:341 AExp BNot
constr 362:365 AExp BAnd
R249:252 Imp <> bexp ind
R267:270 Imp <> bexp ind
R298:301 Imp <> bexp ind
R290:293 Imp AExp aexp ind
R282:285 Imp AExp aexp ind
R329:332 Imp <> bexp ind
R321:324 Imp AExp aexp ind
R313:316 Imp AExp aexp ind
R353:356 Imp <> bexp ind
R345:348 Imp <> bexp ind
R385:388 Imp <> bexp ind
R377:380 Imp <> bexp ind
R369:372 Imp <> bexp ind
def 401:405 AExp aeval
R412:415 Imp AExp aexp ind
R420:422 Coq.Init.Datatypes <> nat ind
R435:435 Imp <> e var
R446:449 Imp AExp ANum constr
R462:466 Imp AExp APlus constr
R477:477 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R486:490 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R499:499 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R478:482 Imp <> aeval def
R491:495 Imp <> aeval def
R505:510 Imp AExp AMinus constr
R521:521 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R530:534 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R543:543 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R522:526 Imp <> aeval def
R535:539 Imp <> aeval def
R549:553 Imp AExp AMult constr
R564:564 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R573:577 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R586:586 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R565:569 Imp <> aeval def
R578:582 Imp <> aeval def
def 604:614 AExp test_aeval1
R650:652 Coq.Init.Logic <> :type_scope:x_'='_x not
R619:623 Imp AExp aeval def
R626:630 Imp AExp APlus constr
R642:645 Imp AExp ANum constr
R633:636 Imp AExp ANum constr
def 691:695 AExp beval
R702:705 Imp AExp bexp ind
R710:713 Coq.Init.Datatypes <> bool ind
R726:726 Imp <> e var
R737:741 Imp AExp BTrue constr
R746:749 Coq.Init.Datatypes <> true constr
R755:760 Imp AExp BFalse constr
R765:769 Coq.Init.Datatypes <> false constr
R775:777 Imp AExp BEq constr
R788:794 Coq.Arith.EqNat <> beq_nat def
R808:812 Imp AExp aeval def
R797:801 Imp AExp aeval def
R822:824 Imp AExp BLe constr
R835:841 SfLib <> ble_nat def
R855:859 Imp AExp aeval def
R844:848 Imp AExp aeval def
R869:872 Imp AExp BNot constr
R880:883 Coq.Init.Datatypes <> negb def
R886:890 Imp <> beval def
R900:903 Imp AExp BAnd constr
R914:917 Coq.Init.Datatypes <> andb def
R931:935 Imp <> beval def
R920:924 Imp <> beval def
def 958:971 AExp optimize_0plus
R976:979 Imp AExp aexp ind
R984:987 Imp AExp aexp ind
R1000:1000 Imp <> e var
R1011:1014 Imp AExp ANum constr
R1027:1030 Imp AExp ANum constr
R1038:1042 Imp AExp APlus constr
R1045:1048 Imp AExp ANum constr
R1065:1078 Imp <> optimize_0plus def
R1087:1091 Imp AExp APlus constr
R1108:1112 Imp AExp APlus constr
R1135:1148 Imp <> optimize_0plus def
R1115:1128 Imp <> optimize_0plus def
R1158:1163 Imp AExp AMinus constr
R1180:1185 Imp AExp AMinus constr
R1208:1221 Imp <> optimize_0plus def
R1188:1201 Imp <> optimize_0plus def
R1231:1235 Imp AExp AMult constr
R1252:1256 Imp AExp AMult constr
R1279:1292 Imp <> optimize_0plus def
R1259:1272 Imp <> optimize_0plus def
def 1314:1332 AExp test_optimize_0plus
R1466:1470 Coq.Init.Logic <> :type_scope:x_'='_x not
R1337:1350 Imp AExp optimize_0plus def
R1353:1357 Imp AExp APlus constr
R1393:1397 Imp AExp APlus constr
R1440:1444 Imp AExp APlus constr
R1456:1459 Imp AExp ANum constr
R1447:1450 Imp AExp ANum constr
R1400:1403 Imp AExp ANum constr
R1360:1363 Imp AExp ANum constr
R1471:1475 Imp AExp APlus constr
R1487:1490 Imp AExp ANum constr
R1478:1481 Imp AExp ANum constr
prf 1530:1549 AExp optimize_0plus_sound
R1588:1590 Coq.Init.Logic <> :type_scope:x_'='_x not
R1564:1568 Imp AExp aeval def
R1571:1584 Imp AExp optimize_0plus def
R1586:1586 Imp <> e var
R1591:1595 Imp AExp aeval def
R1597:1597 Imp <> e var
prf 2303:2307 AExp ev100
R2311:2312 SfLib <> ev ind
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2342:2346 SfLib <> ev_SS constr
R2358:2361 SfLib <> ev_0 constr
R2358:2361 SfLib <> ev_0 constr
prf 2378:2383 AExp ev100'
R2387:2388 SfLib <> ev ind
R2418:2421 SfLib <> ev_0 constr
R2418:2421 SfLib <> ev_0 constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2485:2489 SfLib <> ev_SS constr
R2499:2502 SfLib <> ev_0 constr
R2499:2502 SfLib <> ev_0 constr
prf 2551:2556 AExp silly1
R2579:2581 Coq.Init.Logic <> :type_scope:x_'='_x not
R2571:2575 Imp AExp aeval def
R2577:2578 Imp <> ae var
R2582:2586 Imp AExp aeval def
R2588:2589 Imp <> ae var
prf 2663:2668 AExp silly2
R2696:2696 Imp <> P var
R2691:2691 Imp <> P var
prf 2859:2861 AExp foo
R2886:2888 Coq.Init.Logic <> :type_scope:x_'='_x not
R2875:2881 SfLib <> ble_nat def
R2885:2885 Imp <> n var
R2889:2892 Coq.Init.Datatypes <> true constr
prf 3091:3094 AExp foo'
R3119:3121 Coq.Init.Logic <> :type_scope:x_'='_x not
R3108:3114 SfLib <> ble_nat def
R3118:3118 Imp <> n var
R3122:3125 Coq.Init.Datatypes <> true constr
prf 3321:3341 AExp optimize_0plus_sound'
R3380:3382 Coq.Init.Logic <> :type_scope:x_'='_x not
R3356:3360 Imp AExp aeval def
R3363:3376 Imp AExp optimize_0plus def
R3378:3378 Imp <> e var
R3383:3387 Imp AExp aeval def
R3389:3389 Imp <> e var
prf 4135:4156 AExp optimize_0plus_sound''
R4195:4197 Coq.Init.Logic <> :type_scope:x_'='_x not
R4171:4175 Imp AExp aeval def
R4178:4191 Imp AExp optimize_0plus def
R4193:4193 Imp <> e var
R4198:4202 Imp AExp aeval def
R4204:4204 Imp <> e var
prf 4901:4923 AExp optimize_0plus_sound'''
R4962:4964 Coq.Init.Logic <> :type_scope:x_'='_x not
R4938:4942 Imp AExp aeval def
R4945:4958 Imp AExp optimize_0plus def
R4960:4960 Imp <> e var
R4965:4969 Imp AExp aeval def
R4971:4971 Imp <> e var
def 5758:5773 AExp optimize_0plus_b
R5778:5781 Imp AExp bexp ind
R5786:5789 Imp AExp bexp ind
R5802:5802 Imp <> e var
R5813:5817 Imp AExp BTrue constr
R5822:5826 Imp AExp BTrue constr
R5832:5837 Imp AExp BFalse constr
R5842:5847 Imp AExp BFalse constr
R5854:5856 Imp AExp BEq constr
R5869:5871 Imp AExp BEq constr
R5894:5907 Imp AExp optimize_0plus def
R5874:5887 Imp AExp optimize_0plus def
R5919:5921 Imp AExp BLe constr
R5934:5936 Imp AExp BLe constr
R5959:5972 Imp AExp optimize_0plus def
R5939:5952 Imp AExp optimize_0plus def
R5984:5987 Imp AExp BNot constr
R5997:6000 Imp AExp BNot constr
R6011:6014 Imp AExp BAnd constr
R6027:6030 Imp AExp BAnd constr
prf 6250:6272 AExp optimize_0plus__b_sound
R6313:6315 Coq.Init.Logic <> :type_scope:x_'='_x not
R6287:6291 Imp AExp beval def
R6294:6309 Imp AExp optimize_0plus_b def
R6311:6311 Imp <> e var
R6316:6320 Imp AExp beval def
R6322:6322 Imp <> e var
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
R6407:6429 Imp AExp optimize_0plus_sound''' thm
def 6463:6486 AExp silly_presburger_example
R6546:6549 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6545:6545 Imp <> m var
R6550:6550 Imp <> p var
R6522:6525 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R6513:6516 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R6509:6511 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6508:6508 Imp <> m var
R6512:6512 Imp <> n var
R6518:6520 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6517:6517 Imp <> n var
R6521:6521 Imp <> o var
R6531:6533 Coq.Init.Logic <> :type_scope:x_'='_x not
R6527:6529 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6526:6526 Imp <> o var
R6535:6537 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6534:6534 Imp <> p var
mod 6590:6605 <> AExp.aevalR_first_try
ind 6619:6624 AExp.aevalR_first_try aevalR
constr 6655:6660 AExp.aevalR_first_try E_ANum
constr 6709:6715 AExp.aevalR_first_try E_APlus
constr 6839:6846 AExp.aevalR_first_try E_AMinus
constr 6970:6976 AExp.aevalR_first_try E_AMult
R6636:6638 Coq.Init.Datatypes <> nat ind
R6628:6631 Imp AExp.aevalR_first_try aexp ind
R6675:6677 Coq.Init.Datatypes <> nat ind
R6687:6692 Imp <> aevalR ind
R6703:6703 Imp <> n var
R6695:6698 Imp AExp.aevalR_first_try ANum constr
R6700:6700 Imp <> n var
R6734:6737 Imp AExp.aevalR_first_try aexp ind
R6748:6750 Coq.Init.Datatypes <> nat ind
R6804:6809 Imp <> aevalR ind
R6828:6830 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6826:6827 Imp <> n1 var
R6831:6832 Imp <> n2 var
R6812:6816 Imp AExp.aevalR_first_try APlus constr
R6821:6822 Imp <> e2 var
R6818:6819 Imp <> e1 var
R6782:6787 Imp <> aevalR ind
R6792:6793 Imp <> n2 var
R6789:6790 Imp <> e2 var
R6760:6765 Imp <> aevalR ind
R6770:6771 Imp <> n1 var
R6767:6768 Imp <> e1 var
R6864:6867 Imp AExp.aevalR_first_try aexp ind
R6878:6880 Coq.Init.Datatypes <> nat ind
R6934:6939 Imp <> aevalR ind
R6959:6961 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R6957:6958 Imp <> n1 var
R6962:6963 Imp <> n2 var
R6942:6947 Imp AExp.aevalR_first_try AMinus constr
R6952:6953 Imp <> e2 var
R6949:6950 Imp <> e1 var
R6912:6917 Imp <> aevalR ind
R6922:6923 Imp <> n2 var
R6919:6920 Imp <> e2 var
R6890:6895 Imp <> aevalR ind
R6900:6901 Imp <> n1 var
R6897:6898 Imp <> e1 var
R6995:6998 Imp AExp.aevalR_first_try aexp ind
R7009:7011 Coq.Init.Datatypes <> nat ind
R7065:7070 Imp <> aevalR ind
R7089:7091 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R7087:7088 Imp <> n1 var
R7092:7093 Imp <> n2 var
R7073:7077 Imp AExp.aevalR_first_try AMult constr
R7082:7083 Imp <> e2 var
R7079:7080 Imp <> e1 var
R7043:7048 Imp <> aevalR ind
R7053:7054 Imp <> n2 var
R7050:7051 Imp <> e2 var
R7021:7026 Imp <> aevalR ind
R7031:7032 Imp <> n1 var
R7028:7029 Imp <> e1 var
R7120:7125 Imp AExp.aevalR_first_try aevalR ind
not 7107 AExp.aevalR_first_try :type_scope:x_'||'_x
R7151:7166 Imp aevalR_first_try <> mod
ind 7243:7248 AExp aevalR
constr 7279:7284 AExp E_ANum
constr 7329:7335 AExp E_APlus
constr 7440:7447 AExp E_AMinus
constr 7553:7559 AExp E_AMult
R7260:7262 Coq.Init.Datatypes <> nat ind
R7252:7255 Imp AExp aexp ind
R7682:7687 Imp <> aevalR ind
R7298:7300 Coq.Init.Datatypes <> nat ind
R7310:7310 Imp AExp :type_scope:x_'||'_x not
R7317:7322 Imp AExp :type_scope:x_'||'_x not
R7311:7314 Imp AExp ANum constr
R7316:7316 Imp <> n var
R7323:7323 Imp <> n var
R7354:7357 Imp AExp aexp ind
R7369:7371 Coq.Init.Datatypes <> nat ind
R7409:7409 Imp AExp :type_scope:x_'||'_x not
R7421:7426 Imp AExp :type_scope:x_'||'_x not
R7434:7434 Imp AExp :type_scope:x_'||'_x not
R7410:7414 Imp AExp APlus constr
R7419:7420 Imp <> e2 var
R7416:7417 Imp <> e1 var
R7429:7431 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R7427:7428 Imp <> n1 var
R7432:7433 Imp <> n2 var
R7398:7401 Imp AExp :type_scope:x_'||'_x not
R7396:7397 Imp <> e2 var
R7402:7403 Imp <> n2 var
R7384:7387 Imp AExp :type_scope:x_'||'_x not
R7382:7383 Imp <> e1 var
R7388:7389 Imp <> n1 var
R7466:7469 Imp AExp aexp ind
R7481:7483 Coq.Init.Datatypes <> nat ind
R7521:7521 Imp AExp :type_scope:x_'||'_x not
R7534:7539 Imp AExp :type_scope:x_'||'_x not
R7547:7547 Imp AExp :type_scope:x_'||'_x not
R7522:7527 Imp AExp AMinus constr
R7532:7533 Imp <> e2 var
R7529:7530 Imp <> e1 var
R7542:7544 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R7540:7541 Imp <> n1 var
R7545:7546 Imp <> n2 var
R7510:7513 Imp AExp :type_scope:x_'||'_x not
R7508:7509 Imp <> e2 var
R7514:7515 Imp <> n2 var
R7496:7499 Imp AExp :type_scope:x_'||'_x not
R7494:7495 Imp <> e1 var
R7500:7501 Imp <> n1 var
R7578:7581 Imp AExp aexp ind
R7593:7595 Coq.Init.Datatypes <> nat ind
R7633:7633 Imp AExp :type_scope:x_'||'_x not
R7645:7650 Imp AExp :type_scope:x_'||'_x not
R7658:7658 Imp AExp :type_scope:x_'||'_x not
R7634:7638 Imp AExp AMult constr
R7643:7644 Imp <> e2 var
R7640:7641 Imp <> e1 var
R7653:7655 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R7651:7652 Imp <> n1 var
R7656:7657 Imp <> n2 var
R7622:7625 Imp AExp :type_scope:x_'||'_x not
R7620:7621 Imp <> e2 var
R7626:7627 Imp <> n2 var
R7608:7611 Imp AExp :type_scope:x_'||'_x not
R7606:7607 Imp <> e1 var
R7612:7613 Imp <> n1 var
R7682:7687 Imp AExp aevalR ind
not 7669 AExp :type_scope:x_'||'_x
prf 7883:7898 AExp aeval_iff_aevalR
R7916:7916 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7923:7928 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R7918:7921 Imp AExp :type_scope:x_'||'_x not
R7917:7917 Imp <> a var
R7922:7922 Imp <> n var
R7936:7938 Coq.Init.Logic <> :type_scope:x_'='_x not
R7929:7933 Imp AExp aeval def
R7935:7935 Imp <> a var
R7939:7939 Imp <> n var
R8422:8427 Imp AExp E_ANum constr
R8422:8427 Imp AExp E_ANum constr
R8459:8465 Imp AExp E_APlus constr
R8459:8465 Imp AExp E_APlus constr
R8560:8567 Imp AExp E_AMinus constr
R8560:8567 Imp AExp E_AMinus constr
R8661:8667 Imp AExp E_AMult constr
R8661:8667 Imp AExp E_AMult constr
prf 8746:8762 AExp aeval_iff_aevalR'
R8780:8780 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8787:8792 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8782:8785 Imp AExp :type_scope:x_'||'_x not
R8781:8781 Imp <> a var
R8786:8786 Imp <> n var
R8800:8802 Coq.Init.Logic <> :type_scope:x_'='_x not
R8793:8797 Imp AExp aeval def
R8799:8799 Imp <> a var
R8803:8803 Imp <> n var
ind 9130:9135 AExp bevalR
constr 9167:9173 AExp E_BTrue
constr 9201:9208 AExp E_BFalse
constr 9238:9242 AExp E_BEq
constr 9356:9360 AExp E_BLe
constr 9474:9479 AExp E_BNot
constr 9556:9561 AExp E_BAnd
R9147:9150 Coq.Init.Datatypes <> bool ind
R9139:9142 Imp AExp bexp ind
R9692:9697 Imp <> bevalR ind
R9178:9183 Imp <> bevalR ind
R9191:9194 Coq.Init.Datatypes <> true constr
R9185:9189 Imp AExp BTrue constr
R9213:9218 Imp <> bevalR ind
R9227:9231 Coq.Init.Datatypes <> false constr
R9220:9225 Imp AExp BFalse constr
R9260:9263 Imp AExp aexp ind
R9273:9275 Coq.Init.Datatypes <> nat ind
R9316:9321 Imp <> bevalR ind
R9336:9342 Coq.Arith.EqNat <> beq_nat def
R9347:9348 Imp <> n2 var
R9344:9345 Imp <> n1 var
R9324:9326 Imp AExp BEq constr
R9331:9332 Imp <> e2 var
R9328:9329 Imp <> e1 var
R9298:9303 Imp AExp aevalR ind
R9308:9309 Imp <> n2 var
R9305:9306 Imp <> e2 var
R9280:9285 Imp AExp aevalR ind
R9290:9291 Imp <> n1 var
R9287:9288 Imp <> e1 var
R9378:9381 Imp AExp aexp ind
R9391:9393 Coq.Init.Datatypes <> nat ind
R9434:9439 Imp <> bevalR ind
R9454:9460 SfLib <> ble_nat def
R9465:9466 Imp <> n2 var
R9462:9463 Imp <> n1 var
R9442:9444 Imp AExp BLe constr
R9449:9450 Imp <> e2 var
R9446:9447 Imp <> e1 var
R9416:9421 Imp AExp aevalR ind
R9426:9427 Imp <> n2 var
R9423:9424 Imp <> e2 var
R9398:9403 Imp AExp aevalR ind
R9408:9409 Imp <> n1 var
R9405:9406 Imp <> e1 var
R9493:9496 Imp AExp bexp ind
R9502:9505 Coq.Init.Datatypes <> bool ind
R9526:9531 Imp <> bevalR ind
R9543:9546 Coq.Init.Datatypes <> negb def
R9548:9548 Imp <> b var
R9534:9537 Imp AExp BNot constr
R9539:9539 Imp <> e var
R9510:9515 Imp <> bevalR ind
R9519:9519 Imp <> b var
R9517:9517 Imp <> e var
R9579:9582 Imp AExp bexp ind
R9592:9595 Coq.Init.Datatypes <> bool ind
R9636:9641 Imp <> bevalR ind
R9657:9660 Coq.Init.Datatypes <> andb def
R9665:9666 Imp <> b2 var
R9662:9663 Imp <> b1 var
R9644:9647 Imp AExp BAnd constr
R9652:9653 Imp <> e2 var
R9649:9650 Imp <> e1 var
R9618:9623 Imp <> bevalR ind
R9628:9629 Imp <> b2 var
R9625:9626 Imp <> e2 var
R9600:9605 Imp <> bevalR ind
R9610:9611 Imp <> b1 var
R9607:9608 Imp <> e1 var
R9692:9697 Imp AExp bevalR ind
not 9679 AExp :type_scope:x_'|b'_x
prf 9936:9951 AExp beval_iff_bevalR
R9969:9969 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9976:9981 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R9971:9974 Imp AExp :type_scope:x_'|b'_x not
R9970:9970 Imp <> a var
R9975:9975 Imp <> b var
R9989:9991 Coq.Init.Logic <> :type_scope:x_'='_x not
R9982:9986 Imp AExp beval def
R9988:9988 Imp <> a var
R9992:9992 Imp <> b var
R10080:10096 Imp AExp aeval_iff_aevalR' thm
R10119:10135 Imp AExp aeval_iff_aevalR' thm
R10080:10096 Imp AExp aeval_iff_aevalR' thm
R10080:10096 Imp AExp aeval_iff_aevalR' thm
R10080:10096 Imp AExp aeval_iff_aevalR' thm
R10080:10096 Imp AExp aeval_iff_aevalR' thm
R10119:10135 Imp AExp aeval_iff_aevalR' thm
R10119:10135 Imp AExp aeval_iff_aevalR' thm
R10119:10135 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10270:10286 Imp AExp aeval_iff_aevalR' thm
R10367:10370 Imp <> <> mod
mod 10381:10382 <> Id
ind 10396:10397 Id id
constr 10411:10412 Id Id
R10423:10424 Imp <> id ind
R10416:10418 Coq.Init.Datatypes <> nat ind
def 10439:10444 Id beq_id
R10463:10463 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10466:10467 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10470:10470 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10464:10465 Imp <> X1 var
R10468:10469 Imp <> X2 var
R10481:10481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10487:10488 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10494:10494 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R10482:10483 Imp Id Id constr
R10489:10490 Imp Id Id constr
R10499:10505 Coq.Arith.EqNat <> beq_nat def
prf 10529:10539 Id beq_id_refl
R10559:10561 Coq.Init.Logic <> :type_scope:x_'='_x not
R10555:10558 Coq.Init.Datatypes <> true constr
R10562:10567 Imp Id beq_id def
R10571:10571 Imp <> X var
R10569:10569 Imp <> X var
R10611:10622 Coq.Arith.EqNat <> beq_nat_refl thm
R10611:10622 Coq.Arith.EqNat <> beq_nat_refl thm
prf 10639:10647 Id beq_id_eq
R10692:10694 Coq.Init.Logic <> :type_scope:x_'='_x not
R10690:10691 Imp <> i1 var
R10695:10696 Imp <> i2 var
R10671:10673 Coq.Init.Logic <> :type_scope:x_'='_x not
R10667:10670 Coq.Init.Datatypes <> true constr
R10674:10679 Imp Id beq_id def
R10684:10685 Imp <> i2 var
R10681:10682 Imp <> i1 var
R10749:10754 Imp Id beq_id def
R10770:10779 Coq.Arith.EqNat <> beq_nat_eq def
R10770:10779 Coq.Arith.EqNat <> beq_nat_eq def
prf 10823:10841 Id beq_id_false_not_eq
R10887:10890 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R10885:10886 Imp <> i1 var
R10891:10892 Imp <> i2 var
R10873:10875 Coq.Init.Logic <> :type_scope:x_'='_x not
R10861:10866 Imp Id beq_id def
R10871:10872 Imp <> i2 var
R10868:10869 Imp <> i1 var
R10876:10880 Coq.Init.Datatypes <> false constr
R10947:10952 Imp Id beq_id def
R10967:10969 Coq.Init.Logic <> not def
R11017:11028 Coq.Arith.EqNat <> beq_nat_refl thm
R11017:11028 Coq.Arith.EqNat <> beq_nat_refl thm
prf 11065:11083 Id not_eq_beq_id_false
R11127:11129 Coq.Init.Logic <> :type_scope:x_'='_x not
R11115:11120 Imp Id beq_id def
R11125:11126 Imp <> i2 var
R11122:11123 Imp <> i1 var
R11130:11134 Coq.Init.Datatypes <> false constr
R11105:11108 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11103:11104 Imp <> i1 var
R11109:11110 Imp <> i2 var
R11161:11163 Coq.Init.Logic <> not def
R11183:11188 Imp Id beq_id def
R11183:11188 Imp Id beq_id def
R11227:11235 Imp Id beq_id_eq thm
R11227:11235 Imp Id beq_id_eq thm
prf 11294:11303 Id beq_id_sym
R11334:11336 Coq.Init.Logic <> :type_scope:x_'='_x not
R11322:11327 Imp Id beq_id def
R11332:11333 Imp <> i2 var
R11329:11330 Imp <> i1 var
R11337:11342 Imp Id beq_id def
R11347:11348 Imp <> i1 var
R11344:11345 Imp <> i2 var
R11378:11383 Imp Id beq_id def
R11378:11383 Imp Id beq_id def
R11424:11432 Imp Id beq_id_eq thm
R11424:11432 Imp Id beq_id_eq thm
R11458:11468 Imp Id beq_id_refl thm
R11458:11468 Imp Id beq_id_refl thm
R11499:11517 Imp Id beq_id_false_not_eq thm
R11499:11517 Imp Id beq_id_false_not_eq thm
R11548:11566 Imp Id not_eq_beq_id_false thm
R11548:11566 Imp Id not_eq_beq_id_false thm
R11585:11586 Imp <> <> mod
def 11601:11605 <> state
R11616:11618 Coq.Init.Datatypes <> nat ind
R11610:11611 SfLib <> id ind
def 11633:11643 <> empty_state
R11647:11651 Imp <> state def
def 11682:11687 <> update
R11695:11699 Imp <> state def
R11705:11706 SfLib <> id ind
R11714:11716 Coq.Init.Datatypes <> nat ind
R11721:11725 Imp <> state def
R11745:11753 SfLib <> eq_id_dec thm
R11757:11758 Imp <> X' var
R11755:11755 Imp <> X var
R11772:11773 Imp <> st var
R11775:11776 Imp <> X' var
R11765:11765 Imp <> n var
prf 11788:11796 <> update_eq
R11834:11836 Coq.Init.Logic <> :type_scope:x_'='_x not
R11818:11823 Imp <> update def
R11830:11830 Imp <> n var
R11828:11828 Imp <> X var
R11825:11826 Imp <> st var
R11833:11833 Imp <> X var
R11837:11837 Imp <> n var
R11866:11871 Imp <> update def
R11880:11884 SfLib <> eq_id thm
R11880:11884 SfLib <> eq_id thm
prf 11903:11912 <> update_neq
R11970:11973 Coq.Init.Logic <> :type_scope:x_'='_x not
R11979:11979 Coq.Init.Logic <> :type_scope:x_'='_x not
R11952:11957 Imp <> update def
R11965:11965 Imp <> n var
R11962:11963 Imp <> x2 var
R11959:11960 Imp <> st var
R11968:11969 Imp <> x1 var
R11974:11975 Imp <> st var
R11977:11978 Imp <> x1 var
R11939:11942 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11937:11938 Imp <> x2 var
R11943:11944 Imp <> x1 var
R12008:12013 Imp <> update def
R12024:12029 SfLib <> neq_id prfax
R12024:12029 SfLib <> neq_id prfax
prf 12054:12067 <> update_example
R12081:12083 Coq.Init.Datatypes <> nat ind
R12125:12127 Coq.Init.Logic <> :type_scope:x_'='_x not
R12090:12095 Imp <> update def
R12116:12116 Imp <> n var
R12110:12111 SfLib <> Id constr
R12097:12107 Imp <> empty_state def
R12120:12121 SfLib <> Id constr
R12157:12162 Imp <> update def
prf 12203:12215 <> update_shadow
R12243:12247 Imp <> state def
R12288:12290 Coq.Init.Logic <> :type_scope:x_'='_x not
R12255:12260 Imp <> update def
R12282:12283 Imp <> x2 var
R12279:12280 Imp <> k2 var
R12263:12268 Imp <> update def
R12275:12276 Imp <> x1 var
R12272:12273 Imp <> k2 var
R12270:12270 Imp <> f var
R12286:12287 Imp <> k1 var
R12292:12297 Imp <> update def
R12304:12305 Imp <> x2 var
R12301:12302 Imp <> k2 var
R12299:12299 Imp <> f var
R12308:12309 Imp <> k1 var
R12338:12343 Imp <> update def
R12358:12366 SfLib <> eq_id_dec thm
R12358:12366 SfLib <> eq_id_dec thm
prf 12405:12415 <> update_same
R12440:12444 Imp <> state def
R12484:12486 Coq.Init.Logic <> :type_scope:x_'='_x not
R12466:12471 Imp <> update def
R12478:12479 Imp <> x1 var
R12475:12476 Imp <> k1 var
R12473:12473 Imp <> f var
R12482:12483 Imp <> k2 var
R12487:12487 Imp <> f var
R12489:12490 Imp <> k2 var
R12454:12456 Coq.Init.Logic <> :type_scope:x_'='_x not
R12450:12450 Imp <> f var
R12452:12453 Imp <> k1 var
R12457:12458 Imp <> x1 var
R12517:12522 Imp <> update def
R12535:12543 SfLib <> eq_id_dec thm
R12535:12543 SfLib <> eq_id_dec thm
prf 12620:12633 <> update_permute
R12714:12716 Coq.Init.Logic <> :type_scope:x_'='_x not
R12680:12685 Imp <> update def
R12708:12709 Imp <> n2 var
R12705:12706 Imp <> x1 var
R12688:12693 Imp <> update def
R12701:12702 Imp <> n1 var
R12698:12699 Imp <> x2 var
R12695:12696 Imp <> st var
R12712:12713 Imp <> x3 var
R12718:12723 Imp <> update def
R12746:12747 Imp <> n1 var
R12743:12744 Imp <> x2 var
R12726:12731 Imp <> update def
R12739:12740 Imp <> n2 var
R12736:12737 Imp <> x1 var
R12733:12734 Imp <> st var
R12750:12751 Imp <> x3 var
R12667:12670 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R12665:12666 Imp <> x2 var
R12671:12672 Imp <> x1 var
R12780:12785 Imp <> update def
R12800:12808 SfLib <> eq_id_dec thm
R12800:12808 SfLib <> eq_id_dec thm
R12867:12872 SfLib <> neq_id prfax
R12867:12872 SfLib <> neq_id prfax
ind 12914:12917 <> aexp
constr 12933:12936 <> ANum
constr 12956:12958 <> AId
constr 12977:12981 <> APlus
constr 13010:13015 <> AMinus
constr 13044:13048 <> AMult
R12947:12950 Imp <> aexp ind
R12940:12942 Coq.Init.Datatypes <> nat ind
R12968:12971 Imp <> aexp ind
R12962:12963 SfLib <> id ind
R13001:13004 Imp <> aexp ind
R12993:12996 Imp <> aexp ind
R12985:12988 Imp <> aexp ind
R13035:13038 Imp <> aexp ind
R13027:13030 Imp <> aexp ind
R13019:13022 Imp <> aexp ind
R13068:13071 Imp <> aexp ind
R13060:13063 Imp <> aexp ind
R13052:13055 Imp <> aexp ind
def 13261:13261 <> X
R13265:13266 SfLib <> id ind
R13271:13272 SfLib <> Id constr
def 13288:13288 <> Y
R13292:13293 SfLib <> id ind
R13298:13299 SfLib <> Id constr
def 13315:13315 <> Z
R13319:13320 SfLib <> id ind
R13325:13326 SfLib <> Id constr
ind 13342:13345 <> bexp
constr 13361:13365 <> BTrue
constr 13378:13383 <> BFalse
constr 13396:13398 <> BEq
constr 13427:13429 <> BLe
constr 13458:13461 <> BNot
constr 13482:13485 <> BAnd
R13369:13372 Imp <> bexp ind
R13387:13390 Imp <> bexp ind
R13418:13421 Imp <> bexp ind
R13410:13413 Imp <> aexp ind
R13402:13405 Imp <> aexp ind
R13449:13452 Imp <> bexp ind
R13441:13444 Imp <> aexp ind
R13433:13436 Imp <> aexp ind
R13473:13476 Imp <> bexp ind
R13465:13468 Imp <> bexp ind
R13505:13508 Imp <> bexp ind
R13497:13500 Imp <> bexp ind
R13489:13492 Imp <> bexp ind
def 13714:13718 <> aeval
R13726:13730 Imp <> state def
R13738:13741 Imp <> aexp ind
R13746:13748 Coq.Init.Datatypes <> nat ind
R13761:13761 Imp <> a var
R13772:13775 Imp <> ANum constr
R13788:13790 Imp <> AId constr
R13797:13798 Imp <> st var
R13806:13810 Imp <> APlus constr
R13821:13821 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13833:13837 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13849:13849 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R13822:13826 Imp <> aeval def
R13828:13829 Imp <> st var
R13838:13842 Imp <> aeval def
R13844:13845 Imp <> st var
R13855:13860 Imp <> AMinus constr
R13871:13871 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R13883:13887 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R13899:13899 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R13872:13876 Imp <> aeval def
R13878:13879 Imp <> st var
R13888:13892 Imp <> aeval def
R13894:13895 Imp <> st var
R13905:13909 Imp <> AMult constr
R13920:13920 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13932:13936 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13948:13948 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R13921:13925 Imp <> aeval def
R13927:13928 Imp <> st var
R13937:13941 Imp <> aeval def
R13943:13944 Imp <> st var
def 13967:13971 <> beval
R13979:13983 Imp <> state def
R13991:13994 Imp <> bexp ind
R13999:14002 Coq.Init.Datatypes <> bool ind
R14015:14015 Imp <> b var
R14026:14030 Imp <> BTrue constr
R14035:14038 Coq.Init.Datatypes <> true constr
R14044:14049 Imp <> BFalse constr
R14054:14058 Coq.Init.Datatypes <> false constr
R14064:14066 Imp <> BEq constr
R14077:14083 Coq.Arith.EqNat <> beq_nat def
R14100:14104 Imp <> aeval def
R14106:14107 Imp <> st var
R14086:14090 Imp <> aeval def
R14092:14093 Imp <> st var
R14117:14119 Imp <> BLe constr
R14130:14136 SfLib <> ble_nat def
R14153:14157 Imp <> aeval def
R14159:14160 Imp <> st var
R14139:14143 Imp <> aeval def
R14145:14146 Imp <> st var
R14170:14173 Imp <> BNot constr
R14181:14184 Coq.Init.Datatypes <> negb def
R14187:14191 Imp <> beval def
R14193:14194 Imp <> st var
R14204:14207 Imp <> BAnd constr
R14218:14221 Coq.Init.Datatypes <> andb def
R14238:14242 Imp <> beval def
R14244:14245 Imp <> st var
R14224:14228 Imp <> beval def
R14230:14231 Imp <> st var
def 14267:14271 <> aexp1
R14357:14361 Coq.Init.Logic <> :type_scope:x_'='_x not
R14277:14281 Imp <> aeval def
R14317:14321 Imp <> APlus constr
R14333:14337 Imp <> AMult constr
R14348:14351 Imp <> ANum constr
R14340:14342 Imp <> AId constr
R14344:14344 Imp <> X def
R14324:14327 Imp <> ANum constr
R14284:14289 Imp <> update def
R14303:14303 Imp <> X def
R14291:14301 Imp <> empty_state def
def 14400:14404 <> bexp1
R14491:14495 Coq.Init.Logic <> :type_scope:x_'='_x not
R14410:14414 Imp <> beval def
R14450:14453 Imp <> BAnd constr
R14462:14465 Imp <> BNot constr
R14468:14470 Imp <> BLe constr
R14481:14484 Imp <> ANum constr
R14473:14475 Imp <> AId constr
R14477:14477 Imp <> X def
R14455:14459 Imp <> BTrue constr
R14417:14422 Imp <> update def
R14436:14436 Imp <> X def
R14424:14434 Imp <> empty_state def
R14496:14499 Coq.Init.Datatypes <> true constr
ind 14538:14540 <> com
constr 14556:14560 <> CSkip
constr 14572:14575 <> CAss
constr 14601:14604 <> CSeq
constr 14630:14632 <> CIf
constr 14666:14671 <> CWhile
R14564:14566 Imp <> com ind
R14593:14595 Imp <> com ind
R14585:14588 Imp <> aexp ind
R14579:14580 SfLib <> id ind
R14622:14624 Imp <> com ind
R14615:14617 Imp <> com ind
R14608:14610 Imp <> com ind
R14658:14660 Imp <> com ind
R14651:14653 Imp <> com ind
R14644:14646 Imp <> com ind
R14636:14639 Imp <> bexp ind
R14690:14692 Imp <> com ind
R14683:14685 Imp <> com ind
R14675:14678 Imp <> bexp ind
R14887:14891 Imp <> CSkip constr
not 14873 <> ::'SKIP'
R14921:14924 Imp <> CAss constr
not 14903 <> ::x_'::='_x
R14972:14975 Imp <> CSeq constr
not 14955 <> ::x_';;'_x
R15060:15065 Imp <> CWhile constr
not 15029 <> ::'WHILE'_x_'DO'_x_'END'
R15159:15161 Imp <> CIf constr
not 15117 <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
def 15221:15231 <> fact_in_coq
R15235:15237 Imp <> com ind
R15255:15259 Imp <> ::x_';;'_x not
R15245:15249 Imp <> ::x_'::='_x not
R15244:15244 Imp <> Z def
R15250:15252 Imp <> AId constr
R15254:15254 Imp <> X def
R15272:15276 Imp <> ::x_';;'_x not
R15261:15265 Imp <> ::x_'::='_x not
R15260:15260 Imp <> Y def
R15266:15269 Imp <> ANum constr
R15277:15282 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15310:15317 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15381:15386 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15283:15286 Imp <> BNot constr
R15289:15291 Imp <> BEq constr
R15302:15305 Imp <> ANum constr
R15294:15296 Imp <> AId constr
R15298:15298 Imp <> Z def
R15345:15351 Imp <> ::x_';;'_x not
R15319:15323 Imp <> ::x_'::='_x not
R15318:15318 Imp <> Y def
R15324:15328 Imp <> AMult constr
R15339:15341 Imp <> AId constr
R15343:15343 Imp <> Z def
R15331:15333 Imp <> AId constr
R15335:15335 Imp <> Y def
R15353:15357 Imp <> ::x_'::='_x not
R15352:15352 Imp <> Z def
R15358:15363 Imp <> AMinus constr
R15374:15377 Imp <> ANum constr
R15366:15368 Imp <> AId constr
R15370:15370 Imp <> Z def
def 15401:15405 <> plus2
R15409:15411 Imp <> com ind
R15419:15424 Imp <> ::x_'::='_x not
R15447:15447 Imp <> ::x_'::='_x not
R15418:15418 Imp <> X def
R15425:15429 Imp <> APlus constr
R15440:15443 Imp <> ANum constr
R15432:15434 Imp <> AId constr
R15436:15436 Imp <> X def
def 15462:15471 <> XtimesYinZ
R15475:15477 Imp <> com ind
R15485:15490 Imp <> ::x_'::='_x not
R15512:15512 Imp <> ::x_'::='_x not
R15484:15484 Imp <> Z def
R15491:15495 Imp <> AMult constr
R15506:15508 Imp <> AId constr
R15510:15510 Imp <> Y def
R15498:15500 Imp <> AId constr
R15502:15502 Imp <> X def
def 15527:15546 <> subtract_slowly_body
R15550:15552 Imp <> com ind
R15588:15593 Imp <> ::x_';;'_x not
R15560:15564 Imp <> ::x_'::='_x not
R15559:15559 Imp <> Z def
R15565:15570 Imp <> AMinus constr
R15581:15584 Imp <> ANum constr
R15573:15575 Imp <> AId constr
R15577:15577 Imp <> Z def
R15595:15599 Imp <> ::x_'::='_x not
R15594:15594 Imp <> X def
R15600:15605 Imp <> AMinus constr
R15616:15619 Imp <> ANum constr
R15608:15610 Imp <> AId constr
R15612:15612 Imp <> X def
def 15637:15651 <> subtract_slowly
R15655:15657 Imp <> com ind
R15664:15669 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15697:15704 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15725:15730 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15670:15673 Imp <> BNot constr
R15676:15678 Imp <> BEq constr
R15689:15692 Imp <> ANum constr
R15681:15683 Imp <> AId constr
R15685:15685 Imp <> X def
R15705:15724 Imp <> subtract_slowly_body def
def 15745:15768 <> subtract_3_from_5_slowly
R15772:15774 Imp <> com ind
R15793:15798 Imp <> ::x_';;'_x not
R15782:15786 Imp <> ::x_'::='_x not
R15781:15781 Imp <> X def
R15787:15790 Imp <> ANum constr
R15811:15816 Imp <> ::x_';;'_x not
R15800:15804 Imp <> ::x_'::='_x not
R15799:15799 Imp <> Z def
R15805:15808 Imp <> ANum constr
R15817:15831 Imp <> subtract_slowly def
def 15846:15849 <> loop
R15853:15855 Imp <> com ind
R15862:15867 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15873:15880 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15885:15890 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R15868:15872 Imp <> BTrue constr
R15881:15884 Imp <> ::'SKIP' not
ind 15975:15979 <> ceval
constr 16020:16025 <> E_Skip
constr 16066:16070 <> E_Ass
constr 16162:16166 <> E_Seq
constr 16280:16287 <> E_IfTrue
constr 16414:16422 <> E_IfFalse
constr 16550:16559 <> E_WhileEnd
constr 16646:16656 <> E_WhileLoop
R15999:16003 Imp <> state def
R15990:15994 Imp <> state def
R15983:15985 Imp <> com ind
R16848:16852 Imp <> ceval ind
R16050:16052 Imp <> ::x_'/'_x_'||'_x not
R16055:16058 Imp <> ::x_'/'_x_'||'_x not
R16046:16049 Imp <> ::'SKIP' not
R16053:16054 Imp <> st var
R16059:16060 Imp <> st var
R16123:16123 Imp <> ::x_'/'_x_'||'_x not
R16132:16135 Imp <> ::x_'/'_x_'||'_x not
R16138:16142 Imp <> ::x_'/'_x_'||'_x not
R16156:16156 Imp <> ::x_'/'_x_'||'_x not
R16125:16129 Imp <> ::x_'::='_x not
R16124:16124 Imp <> x var
R16130:16131 Imp <> a1 var
R16136:16137 Imp <> st var
R16143:16148 Imp <> update def
R16155:16155 Imp <> n var
R16153:16153 Imp <> x var
R16150:16151 Imp <> st var
R16109:16111 Coq.Init.Logic <> :type_scope:x_'='_x not
R16098:16102 Imp <> aeval def
R16107:16108 Imp <> a1 var
R16104:16105 Imp <> st var
R16112:16112 Imp <> n var
R16252:16252 Imp <> ::x_'/'_x_'||'_x not
R16261:16264 Imp <> ::x_'/'_x_'||'_x not
R16267:16270 Imp <> ::x_'/'_x_'||'_x not
R16255:16258 Imp <> ::x_';;'_x not
R16253:16254 Imp <> c1 var
R16259:16260 Imp <> c2 var
R16265:16266 Imp <> st var
R16271:16274 Imp <> st'' var
R16228:16230 Imp <> ::x_'/'_x_'||'_x not
R16234:16237 Imp <> ::x_'/'_x_'||'_x not
R16226:16227 Imp <> c2 var
R16231:16233 Imp <> st' var
R16238:16241 Imp <> st'' var
R16204:16206 Imp <> ::x_'/'_x_'||'_x not
R16209:16212 Imp <> ::x_'/'_x_'||'_x not
R16202:16203 Imp <> c1 var
R16207:16208 Imp <> st var
R16213:16215 Imp <> st' var
R16371:16371 Imp <> ::x_'/'_x_'||'_x not
R16396:16399 Imp <> ::x_'/'_x_'||'_x not
R16402:16405 Imp <> ::x_'/'_x_'||'_x not
R16372:16375 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16377:16382 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16385:16390 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16393:16395 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16376:16376 Imp <> b var
R16383:16384 Imp <> c1 var
R16391:16392 Imp <> c2 var
R16400:16401 Imp <> st var
R16406:16408 Imp <> st' var
R16349:16351 Imp <> ::x_'/'_x_'||'_x not
R16354:16357 Imp <> ::x_'/'_x_'||'_x not
R16347:16348 Imp <> c1 var
R16352:16353 Imp <> st var
R16358:16360 Imp <> st' var
R16330:16332 Coq.Init.Logic <> :type_scope:x_'='_x not
R16320:16324 Imp <> beval def
R16329:16329 Imp <> b var
R16326:16327 Imp <> st var
R16333:16336 Coq.Init.Datatypes <> true constr
R16507:16507 Imp <> ::x_'/'_x_'||'_x not
R16532:16535 Imp <> ::x_'/'_x_'||'_x not
R16538:16541 Imp <> ::x_'/'_x_'||'_x not
R16508:16511 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16513:16518 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16521:16526 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16529:16531 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R16512:16512 Imp <> b var
R16519:16520 Imp <> c1 var
R16527:16528 Imp <> c2 var
R16536:16537 Imp <> st var
R16542:16544 Imp <> st' var
R16485:16487 Imp <> ::x_'/'_x_'||'_x not
R16490:16493 Imp <> ::x_'/'_x_'||'_x not
R16483:16484 Imp <> c2 var
R16488:16489 Imp <> st var
R16494:16496 Imp <> st' var
R16465:16467 Coq.Init.Logic <> :type_scope:x_'='_x not
R16455:16459 Imp <> beval def
R16464:16464 Imp <> b var
R16461:16462 Imp <> st var
R16468:16472 Coq.Init.Datatypes <> false constr
R16612:16612 Imp <> ::x_'/'_x_'||'_x not
R16629:16632 Imp <> ::x_'/'_x_'||'_x not
R16635:16638 Imp <> ::x_'/'_x_'||'_x not
R16613:16618 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16620:16623 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16625:16628 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16619:16619 Imp <> b var
R16624:16624 Imp <> c var
R16633:16634 Imp <> st var
R16639:16640 Imp <> st var
R16594:16596 Coq.Init.Logic <> :type_scope:x_'='_x not
R16584:16588 Imp <> beval def
R16593:16593 Imp <> b var
R16590:16591 Imp <> st var
R16597:16601 Coq.Init.Datatypes <> false constr
R16782:16782 Imp <> ::x_'/'_x_'||'_x not
R16799:16802 Imp <> ::x_'/'_x_'||'_x not
R16805:16808 Imp <> ::x_'/'_x_'||'_x not
R16783:16788 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16790:16793 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16795:16798 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16789:16789 Imp <> b var
R16794:16794 Imp <> c var
R16803:16804 Imp <> st var
R16809:16812 Imp <> st'' var
R16740:16740 Imp <> ::x_'/'_x_'||'_x not
R16757:16760 Imp <> ::x_'/'_x_'||'_x not
R16764:16767 Imp <> ::x_'/'_x_'||'_x not
R16741:16746 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16748:16751 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16753:16756 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R16747:16747 Imp <> b var
R16752:16752 Imp <> c var
R16761:16763 Imp <> st' var
R16768:16771 Imp <> st'' var
R16718:16720 Imp <> ::x_'/'_x_'||'_x not
R16723:16726 Imp <> ::x_'/'_x_'||'_x not
R16717:16717 Imp <> c var
R16721:16722 Imp <> st var
R16727:16729 Imp <> st' var
R16700:16702 Coq.Init.Logic <> :type_scope:x_'='_x not
R16690:16694 Imp <> beval def
R16699:16699 Imp <> b var
R16696:16697 Imp <> st var
R16703:16706 Coq.Init.Datatypes <> true constr
R16848:16852 Imp <> ceval ind
not 16823 <> ::x_'/'_x_'||'_x
def 17116:17129 <> ceval_example1
R17136:17136 Imp <> ::x_'/'_x_'||'_x not
R17239:17245 Imp <> ::x_'/'_x_'||'_x not
R17257:17264 Imp <> ::x_'/'_x_'||'_x not
R17300:17300 Imp <> ::x_'/'_x_'||'_x not
R17149:17156 Imp <> ::x_';;'_x not
R17138:17142 Imp <> ::x_'::='_x not
R17137:17137 Imp <> X def
R17143:17146 Imp <> ANum constr
R17157:17160 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R17181:17193 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R17206:17218 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R17231:17238 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R17161:17163 Imp <> BLe constr
R17174:17177 Imp <> ANum constr
R17166:17168 Imp <> AId constr
R17170:17170 Imp <> X def
R17195:17199 Imp <> ::x_'::='_x not
R17194:17194 Imp <> Y def
R17200:17203 Imp <> ANum constr
R17220:17224 Imp <> ::x_'::='_x not
R17219:17219 Imp <> Z def
R17225:17228 Imp <> ANum constr
R17246:17256 Imp <> empty_state def
R17265:17270 Imp <> update def
R17297:17297 Imp <> Z def
R17273:17278 Imp <> update def
R17292:17292 Imp <> X def
R17280:17290 Imp <> empty_state def
R17330:17335 Imp <> update def
R17349:17349 Imp <> X def
R17337:17347 Imp <> empty_state def
R17318:17322 Imp <> E_Seq constr
R17330:17335 Imp <> update def
R17349:17349 Imp <> X def
R17337:17347 Imp <> empty_state def
R17318:17322 Imp <> E_Seq constr
R17394:17398 Imp <> E_Ass constr
R17394:17398 Imp <> E_Ass constr
R17445:17453 Imp <> E_IfFalse constr
R17445:17453 Imp <> E_IfFalse constr
R17487:17491 Imp <> E_Ass constr
R17487:17491 Imp <> E_Ass constr
def 17521:17534 <> ceval_example2
R17541:17541 Imp <> ::x_'/'_x_'||'_x not
R17584:17587 Imp <> ::x_'/'_x_'||'_x not
R17599:17607 Imp <> ::x_'/'_x_'||'_x not
R17656:17656 Imp <> ::x_'/'_x_'||'_x not
R17554:17556 Imp <> ::x_';;'_x not
R17543:17547 Imp <> ::x_'::='_x not
R17542:17542 Imp <> X def
R17548:17551 Imp <> ANum constr
R17569:17571 Imp <> ::x_';;'_x not
R17558:17562 Imp <> ::x_'::='_x not
R17557:17557 Imp <> Y def
R17563:17566 Imp <> ANum constr
R17573:17577 Imp <> ::x_'::='_x not
R17572:17572 Imp <> Z def
R17578:17581 Imp <> ANum constr
R17588:17598 Imp <> empty_state def
R17608:17613 Imp <> update def
R17653:17653 Imp <> Z def
R17616:17621 Imp <> update def
R17648:17648 Imp <> Y def
R17624:17629 Imp <> update def
R17643:17643 Imp <> X def
R17631:17641 Imp <> empty_state def
R17686:17691 Imp <> update def
R17705:17705 Imp <> X def
R17693:17703 Imp <> empty_state def
R17674:17678 Imp <> E_Seq constr
R17686:17691 Imp <> update def
R17705:17705 Imp <> X def
R17693:17703 Imp <> empty_state def
R17674:17678 Imp <> E_Seq constr
R17721:17725 Imp <> E_Ass constr
R17721:17725 Imp <> E_Ass constr
R17761:17766 Imp <> update def
R17793:17793 Imp <> Y def
R17769:17774 Imp <> update def
R17788:17788 Imp <> X def
R17776:17786 Imp <> empty_state def
R17749:17753 Imp <> E_Seq constr
R17761:17766 Imp <> update def
R17793:17793 Imp <> Y def
R17769:17774 Imp <> update def
R17788:17788 Imp <> X def
R17776:17786 Imp <> empty_state def
R17749:17753 Imp <> E_Seq constr
R17809:17813 Imp <> E_Ass constr
R17809:17813 Imp <> E_Ass constr
R17837:17841 Imp <> E_Ass constr
R17837:17841 Imp <> E_Ass constr
def 17876:17883 <> pup_to_n
R17887:17889 Imp <> com ind
R17908:17912 Imp <> ::x_';;'_x not
R17897:17901 Imp <> ::x_'::='_x not
R17896:17896 Imp <> Y def
R17902:17905 Imp <> ANum constr
R17913:17919 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R17947:17955 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R18020:18026 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R17920:17923 Imp <> BNot constr
R17926:17928 Imp <> BEq constr
R17939:17942 Imp <> ANum constr
R17931:17933 Imp <> AId constr
R17935:17935 Imp <> X def
R17983:17990 Imp <> ::x_';;'_x not
R17957:17961 Imp <> ::x_'::='_x not
R17956:17956 Imp <> Y def
R17962:17966 Imp <> APlus constr
R17977:17979 Imp <> AId constr
R17981:17981 Imp <> X def
R17969:17971 Imp <> AId constr
R17973:17973 Imp <> Y def
R17992:17996 Imp <> ::x_'::='_x not
R17991:17991 Imp <> X def
R17997:18002 Imp <> AMinus constr
R18013:18016 Imp <> ANum constr
R18005:18007 Imp <> AId constr
R18009:18009 Imp <> X def
prf 18038:18051 <> pup_to_2_ceval
R18065:18068 Imp <> ::x_'/'_x_'||'_x not
R18091:18099 Imp <> ::x_'/'_x_'||'_x not
R18057:18064 Imp <> pup_to_n def
R18069:18074 Imp <> update def
R18088:18088 Imp <> X def
R18076:18086 Imp <> empty_state def
R18100:18105 Imp <> update def
R18190:18190 Imp <> X def
R18108:18113 Imp <> update def
R18185:18185 Imp <> Y def
R18116:18121 Imp <> update def
R18180:18180 Imp <> X def
R18124:18129 Imp <> update def
R18175:18175 Imp <> Y def
R18132:18137 Imp <> update def
R18170:18170 Imp <> Y def
R18140:18145 Imp <> update def
R18165:18165 Imp <> X def
R18147:18157 Imp <> empty_state def
R18222:18227 Imp <> update def
R18254:18254 Imp <> Y def
R18230:18235 Imp <> update def
R18249:18249 Imp <> X def
R18237:18247 Imp <> empty_state def
R18210:18214 Imp <> E_Seq constr
R18222:18227 Imp <> update def
R18254:18254 Imp <> Y def
R18230:18235 Imp <> update def
R18249:18249 Imp <> X def
R18237:18247 Imp <> empty_state def
R18210:18214 Imp <> E_Seq constr
R18270:18274 Imp <> E_Ass constr
R18270:18274 Imp <> E_Ass constr
R18309:18314 Imp <> update def
R18367:18367 Imp <> X def
R18317:18322 Imp <> update def
R18362:18362 Imp <> Y def
R18325:18330 Imp <> update def
R18357:18357 Imp <> Y def
R18333:18338 Imp <> update def
R18352:18352 Imp <> X def
R18340:18350 Imp <> empty_state def
R18291:18301 Imp <> E_WhileLoop constr
R18309:18314 Imp <> update def
R18367:18367 Imp <> X def
R18317:18322 Imp <> update def
R18362:18362 Imp <> Y def
R18325:18330 Imp <> update def
R18357:18357 Imp <> Y def
R18333:18338 Imp <> update def
R18352:18352 Imp <> X def
R18340:18350 Imp <> empty_state def
R18291:18301 Imp <> E_WhileLoop constr
R18405:18410 Imp <> update def
R18450:18450 Imp <> Y def
R18413:18418 Imp <> update def
R18445:18445 Imp <> Y def
R18421:18426 Imp <> update def
R18440:18440 Imp <> X def
R18428:18438 Imp <> empty_state def
R18393:18397 Imp <> E_Seq constr
R18468:18472 Imp <> E_Ass constr
R18405:18410 Imp <> update def
R18450:18450 Imp <> Y def
R18413:18418 Imp <> update def
R18445:18445 Imp <> Y def
R18421:18426 Imp <> update def
R18440:18440 Imp <> X def
R18428:18438 Imp <> empty_state def
R18393:18397 Imp <> E_Seq constr
R18468:18472 Imp <> E_Ass constr
R18468:18472 Imp <> E_Ass constr
R18509:18514 Imp <> update def
R18593:18593 Imp <> X def
R18517:18522 Imp <> update def
R18588:18588 Imp <> Y def
R18525:18530 Imp <> update def
R18583:18583 Imp <> X def
R18533:18538 Imp <> update def
R18578:18578 Imp <> Y def
R18541:18546 Imp <> update def
R18573:18573 Imp <> Y def
R18549:18554 Imp <> update def
R18568:18568 Imp <> X def
R18556:18566 Imp <> empty_state def
R18491:18501 Imp <> E_WhileLoop constr
R18509:18514 Imp <> update def
R18593:18593 Imp <> X def
R18517:18522 Imp <> update def
R18588:18588 Imp <> Y def
R18525:18530 Imp <> update def
R18583:18583 Imp <> X def
R18533:18538 Imp <> update def
R18578:18578 Imp <> Y def
R18541:18546 Imp <> update def
R18573:18573 Imp <> Y def
R18549:18554 Imp <> update def
R18568:18568 Imp <> X def
R18556:18566 Imp <> empty_state def
R18491:18501 Imp <> E_WhileLoop constr
R18635:18640 Imp <> update def
R18706:18706 Imp <> Y def
R18643:18648 Imp <> update def
R18701:18701 Imp <> X def
R18651:18656 Imp <> update def
R18696:18696 Imp <> Y def
R18659:18664 Imp <> update def
R18691:18691 Imp <> Y def
R18667:18672 Imp <> update def
R18686:18686 Imp <> X def
R18674:18684 Imp <> empty_state def
R18623:18627 Imp <> E_Seq constr
R18724:18728 Imp <> E_Ass constr
R18635:18640 Imp <> update def
R18706:18706 Imp <> Y def
R18643:18648 Imp <> update def
R18701:18701 Imp <> X def
R18651:18656 Imp <> update def
R18696:18696 Imp <> Y def
R18659:18664 Imp <> update def
R18691:18691 Imp <> Y def
R18667:18672 Imp <> update def
R18686:18686 Imp <> X def
R18674:18684 Imp <> empty_state def
R18623:18627 Imp <> E_Seq constr
R18724:18728 Imp <> E_Ass constr
R18724:18728 Imp <> E_Ass constr
R18749:18758 Imp <> E_WhileEnd constr
R18749:18758 Imp <> E_WhileEnd constr
prf 18783:18801 <> ceval_deterministic
R18877:18879 Coq.Init.Logic <> :type_scope:x_'='_x not
R18874:18876 Imp <> st1 var
R18880:18882 Imp <> st2 var
R18853:18855 Imp <> ::x_'/'_x_'||'_x not
R18858:18861 Imp <> ::x_'/'_x_'||'_x not
R18852:18852 Imp <> c var
R18856:18857 Imp <> st var
R18862:18864 Imp <> st2 var
R18831:18833 Imp <> ::x_'/'_x_'||'_x not
R18836:18839 Imp <> ::x_'/'_x_'||'_x not
R18830:18830 Imp <> c var
R18834:18835 Imp <> st var
R18840:18842 Imp <> st1 var
R19121:19123 Coq.Init.Logic <> :type_scope:x_'='_x not
R19121:19123 Coq.Init.Logic <> :type_scope:x_'='_x not
R19910:19912 Coq.Init.Logic <> :type_scope:x_'='_x not
R19910:19912 Coq.Init.Logic <> :type_scope:x_'='_x not
prf 20054:20062 <> loop_stop
R20114:20116 Coq.Init.Logic <> :type_scope:'~'_x not
R20146:20146 Coq.Init.Logic <> :type_scope:'~'_x not
R20133:20135 Imp <> ::x_'/'_x_'||'_x not
R20139:20142 Imp <> ::x_'/'_x_'||'_x not
R20117:20122 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20124:20127 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20129:20132 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20123:20123 Imp <> b var
R20128:20128 Imp <> c var
R20136:20138 Imp <> st1 var
R20143:20145 Imp <> st2 var
R20088:20088 Coq.Init.Logic <> :type_scope:x_'='_x not
R20100:20103 Coq.Init.Logic <> :type_scope:x_'='_x not
R20089:20093 Imp <> beval def
R20099:20099 Imp <> b var
R20095:20097 Imp <> st2 var
R20104:20107 Coq.Init.Datatypes <> true constr
R20175:20177 Coq.Init.Logic <> not def
R20202:20207 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20209:20212 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20214:20217 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20202:20207 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20209:20212 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R20214:20217 Imp <> ::'WHILE'_x_'DO'_x_'END' not
prf 20374:20383 <> plus2_spec
R20448:20450 Coq.Init.Logic <> :type_scope:x_'='_x not
R20443:20445 Imp <> st' var
R20447:20447 Imp <> X def
R20452:20454 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R20451:20451 Imp <> n var
R20425:20427 Imp <> ::x_'/'_x_'||'_x not
R20430:20433 Imp <> ::x_'/'_x_'||'_x not
R20420:20424 Imp <> plus2 def
R20428:20429 Imp <> st var
R20434:20436 Imp <> st' var
R20410:20412 Coq.Init.Logic <> :type_scope:x_'='_x not
R20406:20407 Imp <> st var
R20409:20409 Imp <> X def
R20413:20413 Imp <> n var
R20547:20555 Imp <> update_eq thm
R20547:20555 Imp <> update_eq thm
def 20572:20589 <> XtimesYinZ_Example
R20597:20597 Imp <> ::x_'/'_x_'||'_x not
R20638:20641 Imp <> ::x_'/'_x_'||'_x not
R20653:20661 Imp <> ::x_'/'_x_'||'_x not
R20710:20710 Imp <> ::x_'/'_x_'||'_x not
R20610:20612 Imp <> ::x_';;'_x not
R20599:20603 Imp <> ::x_'::='_x not
R20598:20598 Imp <> X def
R20604:20607 Imp <> ANum constr
R20625:20627 Imp <> ::x_';;'_x not
R20614:20618 Imp <> ::x_'::='_x not
R20613:20613 Imp <> Y def
R20619:20622 Imp <> ANum constr
R20628:20637 Imp <> XtimesYinZ def
R20642:20652 Imp <> empty_state def
R20662:20667 Imp <> update def
R20707:20707 Imp <> Z def
R20670:20675 Imp <> update def
R20702:20702 Imp <> Y def
R20678:20683 Imp <> update def
R20697:20697 Imp <> X def
R20685:20695 Imp <> empty_state def
R20740:20745 Imp <> update def
R20759:20759 Imp <> X def
R20747:20757 Imp <> empty_state def
R20728:20732 Imp <> E_Seq constr
R20740:20745 Imp <> update def
R20759:20759 Imp <> X def
R20747:20757 Imp <> empty_state def
R20728:20732 Imp <> E_Seq constr
R20773:20777 Imp <> E_Ass constr
R20773:20777 Imp <> E_Ass constr
R20813:20818 Imp <> update def
R20845:20845 Imp <> Y def
R20821:20826 Imp <> update def
R20840:20840 Imp <> X def
R20828:20838 Imp <> empty_state def
R20801:20805 Imp <> E_Seq constr
R20859:20863 Imp <> E_Ass constr
R20813:20818 Imp <> update def
R20845:20845 Imp <> Y def
R20821:20826 Imp <> update def
R20840:20840 Imp <> X def
R20828:20838 Imp <> empty_state def
R20801:20805 Imp <> E_Seq constr
R20859:20863 Imp <> E_Ass constr
R20859:20863 Imp <> E_Ass constr
prf 20895:20910 <> loop_never_stops
R20931:20932 Coq.Init.Logic <> :type_scope:'~'_x not
R20949:20949 Coq.Init.Logic <> :type_scope:'~'_x not
R20937:20939 Imp <> ::x_'/'_x_'||'_x not
R20942:20945 Imp <> ::x_'/'_x_'||'_x not
R20933:20936 Imp <> loop def
R20940:20941 Imp <> st var
R20946:20948 Imp <> st' var
R20990:20993 Imp <> loop def
R21018:21023 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21029:21032 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21037:21040 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21024:21028 Imp <> BTrue constr
R21033:21036 Imp <> ::'SKIP' not
R21018:21023 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21029:21032 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21037:21040 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21024:21028 Imp <> BTrue constr
R21033:21036 Imp <> ::'SKIP' not
def 21195:21203 <> no_whiles
R21210:21212 Imp <> com ind
R21217:21220 Coq.Init.Datatypes <> bool ind
R21233:21233 Imp <> c var
R21244:21247 Imp <> ::'SKIP' not
R21252:21255 Coq.Init.Datatypes <> true constr
R21262:21266 Imp <> ::x_'::='_x not
R21272:21275 Coq.Init.Datatypes <> true constr
R21283:21286 Imp <> ::x_';;'_x not
R21293:21296 Coq.Init.Datatypes <> andb def
R21314:21322 Imp <> no_whiles def
R21299:21307 Imp <> no_whiles def
R21332:21335 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21337:21342 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21345:21350 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21353:21355 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21360:21363 Coq.Init.Datatypes <> andb def
R21381:21389 Imp <> no_whiles def
R21366:21374 Imp <> no_whiles def
R21399:21404 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21406:21409 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21411:21414 Imp <> ::'WHILE'_x_'DO'_x_'END' not
R21419:21423 Coq.Init.Datatypes <> false constr
ind 21443:21452 <> no_whilesR
constr 21474:21476 <> nw1
constr 21500:21502 <> nw2
constr 21553:21555 <> nw3
constr 21637:21639 <> nw4
R21455:21457 Imp <> com ind
R21480:21489 Imp <> no_whilesR ind
R21491:21494 Imp <> ::'SKIP' not
R21516:21517 SfLib <> id ind
R21523:21526 Imp <> aexp ind
R21530:21539 Imp <> no_whilesR ind
R21543:21545 Imp <> ::x_'::='_x not
R21542:21542 Imp <> x var
R21546:21546 Imp <> e var
R21573:21575 Imp <> com ind
R21613:21622 Imp <> no_whilesR ind
R21627:21628 Imp <> ::x_';;'_x not
R21625:21626 Imp <> c1 var
R21629:21630 Imp <> c2 var
R21596:21605 Imp <> no_whilesR ind
R21607:21608 Imp <> c2 var
R21579:21588 Imp <> no_whilesR ind
R21590:21591 Imp <> c1 var
R21653:21656 Imp <> bexp ind
R21666:21668 Imp <> com ind
R21706:21715 Imp <> no_whilesR ind
R21718:21721 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21723:21728 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21731:21736 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21739:21741 Imp <> ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R21722:21722 Imp <> b var
R21729:21730 Imp <> c1 var
R21737:21738 Imp <> c2 var
R21689:21698 Imp <> no_whilesR ind
R21700:21701 Imp <> c2 var
R21672:21681 Imp <> no_whilesR ind
R21683:21684 Imp <> c1 var
prf 21754:21766 <> no_whiles_eqv
R21800:21804 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R21793:21795 Coq.Init.Logic <> :type_scope:x_'='_x not
R21782:21790 Imp <> no_whiles def
R21792:21792 Imp <> c var
R21796:21799 Coq.Init.Datatypes <> true constr
R21805:21814 Imp <> no_whilesR ind
R21816:21816 Imp <> c var
R21905:21913 Imp <> no_whiles def
R21962:21970 Imp <> no_whiles def
R21905:21913 Imp <> no_whiles def
R21905:21913 Imp <> no_whiles def
R21905:21913 Imp <> no_whiles def
R21905:21913 Imp <> no_whiles def
R21962:21970 Imp <> no_whiles def
R21962:21970 Imp <> no_whiles def
R21962:21970 Imp <> no_whiles def
R21962:21970 Imp <> no_whiles def
prf 22155:22173 <> terminates_no_while
R22220:22226 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22230:22231 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22233:22235 Imp <> ::x_'/'_x_'||'_x not
R22238:22241 Imp <> ::x_'/'_x_'||'_x not
R22232:22232 Imp <> c var
R22236:22237 Imp <> st var
R22242:22244 Imp <> st' var
R22191:22200 Imp <> no_whilesR ind
R22202:22202 Imp <> c var
R22304:22311 Coq.Init.Logic <> ex_intro constr
R22304:22311 Coq.Init.Logic <> ex_intro constr
R22366:22371 Imp <> update def
R22379:22383 Imp <> aeval def
R22351:22358 Coq.Init.Logic <> ex_intro constr
R22366:22371 Imp <> update def
R22379:22383 Imp <> aeval def
R22351:22358 Coq.Init.Logic <> ex_intro constr
R22441:22447 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22460:22461 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22455:22459 Imp <> state def
R22464:22466 Imp <> ::x_'/'_x_'||'_x not
R22469:22472 Imp <> ::x_'/'_x_'||'_x not
R22473:22476 Imp <> st'' var
R22543:22549 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22561:22562 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22556:22560 Imp <> state def
R22565:22567 Imp <> ::x_'/'_x_'||'_x not
R22569:22572 Imp <> ::x_'/'_x_'||'_x not
R22573:22575 Imp <> st' var
R22441:22447 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22460:22461 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22455:22459 Imp <> state def
R22464:22466 Imp <> ::x_'/'_x_'||'_x not
R22469:22472 Imp <> ::x_'/'_x_'||'_x not
R22473:22476 Imp <> st'' var
R22543:22549 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22561:22562 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22556:22560 Imp <> state def
R22565:22567 Imp <> ::x_'/'_x_'||'_x not
R22569:22572 Imp <> ::x_'/'_x_'||'_x not
R22573:22575 Imp <> st' var
R22640:22647 Coq.Init.Logic <> ex_intro constr
R22664:22668 Imp <> E_Seq constr
R22640:22647 Coq.Init.Logic <> ex_intro constr
R22664:22668 Imp <> E_Seq constr
R22696:22700 Imp <> beval def
R22696:22700 Imp <> beval def
R22748:22754 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22767:22768 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22762:22766 Imp <> state def
R22771:22773 Imp <> ::x_'/'_x_'||'_x not
R22776:22779 Imp <> ::x_'/'_x_'||'_x not
R22780:22783 Imp <> st'' var
R22848:22855 Coq.Init.Logic <> ex_intro constr
R22871:22878 Imp <> E_IfTrue constr
R22748:22754 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22767:22768 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22762:22766 Imp <> state def
R22771:22773 Imp <> ::x_'/'_x_'||'_x not
R22776:22779 Imp <> ::x_'/'_x_'||'_x not
R22780:22783 Imp <> st'' var
R22848:22855 Coq.Init.Logic <> ex_intro constr
R22871:22878 Imp <> E_IfTrue constr
R22901:22907 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22920:22921 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22915:22919 Imp <> state def
R22924:22926 Imp <> ::x_'/'_x_'||'_x not
R22929:22932 Imp <> ::x_'/'_x_'||'_x not
R22933:22936 Imp <> st'' var
R23001:23008 Coq.Init.Logic <> ex_intro constr
R23024:23032 Imp <> E_IfFalse constr
R22901:22907 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22920:22921 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22915:22919 Imp <> state def
R22924:22926 Imp <> ::x_'/'_x_'||'_x not
R22929:22932 Imp <> ::x_'/'_x_'||'_x not
R22933:22936 Imp <> st'' var
R23001:23008 Coq.Init.Logic <> ex_intro constr
R23024:23032 Imp <> E_IfFalse constr
ind 23059:23064 <> sinstr
constr 23078:23082 <> SPush
constr 23102:23106 <> SLoad
constr 23125:23129 <> SPlus
constr 23142:23147 <> SMinus
constr 23160:23164 <> SMult
R23093:23098 Imp <> sinstr ind
R23086:23088 Coq.Init.Datatypes <> nat ind
R23116:23121 Imp <> sinstr ind
R23110:23111 SfLib <> id ind
R23133:23138 Imp <> sinstr ind
R23151:23156 Imp <> sinstr ind
R23168:23173 Imp <> sinstr ind
def 23186:23194 <> s_execute
R23202:23206 Imp <> state def
R23218:23221 Coq.Init.Datatypes <> list ind
R23223:23225 Coq.Init.Datatypes <> nat ind
R23255:23258 Coq.Init.Datatypes <> list ind
R23260:23265 Imp <> sinstr ind
R23287:23290 Coq.Init.Datatypes <> list ind
R23292:23294 Coq.Init.Datatypes <> nat ind
R23307:23310 Imp <> prog var
R23321:23322 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23327:23331 Imp <> stack var
R23338:23339 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23366:23370 Imp <> SPush constr
R23381:23389 Imp <> s_execute def
R23398:23399 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23400:23404 Imp <> stack var
R23391:23392 Imp <> st var
R23418:23422 Imp <> SLoad constr
R23432:23440 Imp <> s_execute def
R23446:23446 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23452:23454 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23447:23448 Imp <> st var
R23455:23459 Imp <> stack var
R23442:23443 Imp <> st var
R23472:23476 Imp <> SPlus constr
R23487:23491 Imp <> stack var
R23506:23507 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23513:23521 Imp <> s_execute def
R23526:23527 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23523:23524 Imp <> st var
R23541:23541 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23543:23543 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23549:23557 Imp <> s_execute def
R23562:23562 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23564:23564 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23559:23560 Imp <> st var
R23580:23581 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23584:23585 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23593:23601 Imp <> s_execute def
R23607:23607 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23613:23615 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23610:23610 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R23603:23604 Imp <> st var
R23640:23645 Imp <> SMinus constr
R23656:23660 Imp <> stack var
R23675:23676 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23682:23690 Imp <> s_execute def
R23695:23696 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23692:23693 Imp <> st var
R23710:23710 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23712:23712 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23718:23726 Imp <> s_execute def
R23731:23731 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23733:23733 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23728:23729 Imp <> st var
R23749:23750 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23753:23754 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23762:23770 Imp <> s_execute def
R23776:23776 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23782:23784 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23779:23779 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R23772:23773 Imp <> st var
R23809:23813 Imp <> SMult constr
R23824:23828 Imp <> stack var
R23843:23844 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23850:23858 Imp <> s_execute def
R23863:23864 Coq.Lists.List ListNotations :list_scope:'['_']' not
R23860:23861 Imp <> st var
R23878:23878 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23880:23880 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23886:23894 Imp <> s_execute def
R23899:23899 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23901:23901 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R23896:23897 Imp <> st var
R23917:23918 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23921:23922 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23930:23938 Imp <> s_execute def
R23944:23944 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23950:23952 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R23947:23947 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23940:23941 Imp <> st var
def 23995:24004 <> s_execute1
R24080:24085 Coq.Init.Logic <> :type_scope:x_'='_x not
R24013:24021 Imp <> s_execute def
R24045:24045 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24053:24054 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24062:24063 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24071:24072 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24079:24079 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24073:24078 Imp <> SMinus constr
R24064:24068 Imp <> SPush constr
R24055:24059 Imp <> SPush constr
R24046:24050 Imp <> SPush constr
R24035:24036 Coq.Lists.List ListNotations :list_scope:'['_']' not
R24023:24033 Imp <> empty_state def
R24086:24086 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24088:24089 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24091:24091 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 24137:24146 <> s_execute2
R24235:24240 Coq.Init.Logic <> :type_scope:x_'='_x not
R24155:24163 Imp <> s_execute def
R24203:24203 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24211:24212 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24220:24221 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24227:24228 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24234:24234 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24229:24233 Imp <> SPlus constr
R24222:24226 Imp <> SMult constr
R24213:24217 Imp <> SLoad constr
R24219:24219 Imp <> X def
R24204:24208 Imp <> SPush constr
R24190:24190 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24192:24192 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24194:24194 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24166:24171 Imp <> update def
R24185:24185 Imp <> X def
R24173:24183 Imp <> empty_state def
R24241:24241 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24244:24245 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24247:24247 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
def 24292:24300 <> s_compile
R24307:24310 Imp <> aexp ind
R24315:24318 Coq.Init.Datatypes <> list ind
R24320:24325 Imp <> sinstr ind
R24338:24338 Imp <> e var
R24349:24352 Imp <> ANum constr
R24359:24360 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24368:24369 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24361:24365 Imp <> SPush constr
R24375:24377 Imp <> AId constr
R24384:24385 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24393:24394 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24386:24390 Imp <> SLoad constr
R24400:24404 Imp <> APlus constr
R24415:24415 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24428:24430 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24416:24424 Imp <> s_compile def
R24431:24431 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24444:24446 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24432:24440 Imp <> s_compile def
R24447:24447 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24453:24453 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24448:24452 Imp <> SPlus constr
R24459:24464 Imp <> AMinus constr
R24475:24475 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24488:24490 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24476:24484 Imp <> s_compile def
R24491:24491 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24504:24506 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24492:24500 Imp <> s_compile def
R24507:24507 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24514:24514 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24508:24513 Imp <> SMinus constr
R24520:24524 Imp <> AMult constr
R24535:24535 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24548:24550 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24536:24544 Imp <> s_compile def
R24551:24551 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24564:24566 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24552:24560 Imp <> s_compile def
R24567:24567 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24573:24573 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24568:24572 Imp <> SMult constr
def 24591:24600 <> s_compile1
R24659:24663 Coq.Init.Logic <> :type_scope:x_'='_x not
R24608:24616 Imp <> s_compile def
R24619:24624 Imp <> AMinus constr
R24635:24639 Imp <> AMult constr
R24651:24653 Imp <> AId constr
R24655:24655 Imp <> Y def
R24642:24645 Imp <> ANum constr
R24627:24629 Imp <> AId constr
R24631:24631 Imp <> X def
R24664:24664 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24672:24673 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24681:24682 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24690:24691 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24697:24698 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24705:24705 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R24699:24704 Imp <> SMinus constr
R24692:24696 Imp <> SMult constr
R24683:24687 Imp <> SLoad constr
R24689:24689 Imp <> Y def
R24674:24678 Imp <> SPush constr
R24665:24669 Imp <> SLoad constr
R24671:24671 Imp <> X def
prf 24742:24754 <> s_execute_app
R24804:24806 Coq.Init.Logic <> :type_scope:x_'='_x not
R24780:24788 Imp <> s_execute def
R24800:24801 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R24799:24799 Imp <> x var
R24802:24802 Imp <> y var
R24793:24796 Imp <> stck var
R24790:24791 Imp <> st var
R24807:24815 Imp <> s_execute def
R24842:24842 Imp <> y var
R24821:24829 Imp <> s_execute def
R24839:24839 Imp <> x var
R24834:24837 Imp <> stck var
R24831:24832 Imp <> st var
R24817:24818 Imp <> st var
prf 25013:25036 <> s_compile_correct_strong
R25053:25057 Imp <> state def
R25065:25068 Imp <> aexp ind
R25110:25112 Coq.Init.Logic <> :type_scope:x_'='_x not
R25079:25087 Imp <> s_execute def
R25098:25106 Imp <> s_compile def
R25108:25108 Imp <> e var
R25092:25095 Imp <> stck var
R25089:25090 Imp <> st var
R25113:25113 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25124:25126 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R25114:25118 Imp <> aeval def
R25123:25123 Imp <> e var
R25120:25121 Imp <> st var
R25127:25130 Imp <> stck var
R25224:25236 Imp <> s_execute_app thm
R25267:25279 Imp <> s_execute_app thm
R25224:25236 Imp <> s_execute_app thm
R25224:25236 Imp <> s_execute_app thm
R25224:25236 Imp <> s_execute_app thm
R25267:25279 Imp <> s_execute_app thm
R25267:25279 Imp <> s_execute_app thm
R25267:25279 Imp <> s_execute_app thm
prf 25330:25346 <> s_compile_correct
R25363:25367 Imp <> state def
R25375:25378 Imp <> aexp ind
R25413:25415 Coq.Init.Logic <> :type_scope:x_'='_x not
R25384:25392 Imp <> s_execute def
R25401:25409 Imp <> s_compile def
R25411:25411 Imp <> e var
R25397:25398 Coq.Lists.List ListNotations :list_scope:'['_']' not
R25394:25395 Imp <> st var
R25416:25417 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R25428:25429 Coq.Lists.List ListNotations :list_scope:'['_x_';'_'..'_';'_x_']' not
R25418:25422 Imp <> aeval def
R25427:25427 Imp <> e var
R25424:25425 Imp <> st var
R25457:25480 Imp <> s_compile_correct_strong thm
R25457:25480 Imp <> s_compile_correct_strong thm
mod 25498:25505 <> BreakImp
ind 25519:25521 BreakImp com
constr 25537:25541 BreakImp CSkip
constr 25553:25558 BreakImp CBreak
constr 25570:25573 BreakImp CAss
constr 25599:25602 BreakImp CSeq
constr 25628:25630 BreakImp CIf
constr 25664:25669 BreakImp CWhile
R25545:25547 Imp <> com ind
R25562:25564 Imp <> com ind
R25591:25593 Imp <> com ind
R25583:25586 Imp BreakImp aexp ind
R25577:25578 SfLib <> id ind
R25620:25622 Imp <> com ind
R25613:25615 Imp <> com ind
R25606:25608 Imp <> com ind
R25656:25658 Imp <> com ind
R25649:25651 Imp <> com ind
R25642:25644 Imp <> com ind
R25634:25637 Imp BreakImp bexp ind
R25688:25690 Imp <> com ind
R25681:25683 Imp <> com ind
R25673:25676 Imp BreakImp bexp ind
R25905:25909 Imp BreakImp CSkip constr
not 25891 BreakImp ::'SKIP'
R25936:25941 Imp BreakImp CBreak constr
not 25921 BreakImp ::'BREAK'
R25971:25974 Imp BreakImp CAss constr
not 25953 BreakImp ::x_'::='_x
R26021:26024 Imp BreakImp CSeq constr
not 26005 BreakImp ::x_';'_x
R26109:26114 Imp BreakImp CWhile constr
not 26078 BreakImp ::'WHILE'_x_'DO'_x_'END'
R26208:26210 Imp BreakImp CIf constr
not 26166 BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI'
ind 26269:26274 BreakImp status
constr 26290:26298 BreakImp SContinue
constr 26313:26318 BreakImp SBreak
R26302:26307 Imp <> status ind
R26322:26327 Imp <> status ind
ind 26439:26443 BreakImp ceval
constr 26494:26499 BreakImp E_Skip
constr 26552:26558 BreakImp E_Break
constr 26609:26613 BreakImp E_Ass
constr 26717:26725 BreakImp E_SeqCont
constr 26863:26869 BreakImp E_SeqBr
constr 26968:26975 BreakImp E_IfTrue
constr 27115:27123 BreakImp E_IfFalse
constr 27264:27273 BreakImp E_WhileEnd
constr 27372:27382 BreakImp E_WhileLoop
constr 27580:27592 BreakImp E_WhileLoopBr
R26473:26477 Imp BreakImp state def
R26463:26468 Imp BreakImp status ind
R26454:26458 Imp BreakImp state def
R26447:26449 Imp BreakImp com ind
R27763:27767 Imp <> ceval ind
R26524:26526 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26529:26532 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26542:26544 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26520:26523 Imp BreakImp ::'SKIP' not
R26527:26528 Imp <> st var
R26533:26541 Imp BreakImp SContinue constr
R26545:26546 Imp <> st var
R26584:26586 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26589:26592 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26599:26601 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26579:26583 Imp BreakImp ::'BREAK' not
R26587:26588 Imp <> st var
R26593:26598 Imp BreakImp SBreak constr
R26602:26603 Imp <> st var
R26666:26666 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26675:26678 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26681:26684 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26694:26697 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26711:26711 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26668:26672 Imp BreakImp ::x_'::='_x not
R26667:26667 Imp <> x var
R26673:26674 Imp <> a1 var
R26679:26680 Imp <> st var
R26685:26693 Imp BreakImp SContinue constr
R26698:26703 Imp BreakImp update def
R26710:26710 Imp <> n var
R26708:26708 Imp <> x var
R26705:26706 Imp <> st var
R26652:26654 Coq.Init.Logic <> :type_scope:x_'='_x not
R26641:26645 Imp BreakImp aeval def
R26650:26651 Imp <> a1 var
R26647:26648 Imp <> st var
R26655:26655 Imp <> n var
R26831:26831 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26839:26842 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26845:26848 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26851:26853 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26834:26836 Imp BreakImp ::x_';'_x not
R26832:26833 Imp <> c1 var
R26837:26838 Imp <> c2 var
R26843:26844 Imp <> st var
R26849:26850 Imp <> b1 var
R26854:26857 Imp <> st'' var
R26802:26804 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26808:26811 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26814:26816 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26800:26801 Imp <> c2 var
R26805:26807 Imp <> st' var
R26812:26813 Imp <> b1 var
R26817:26820 Imp <> st'' var
R26766:26768 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26771:26774 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26784:26786 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26764:26765 Imp <> c1 var
R26769:26770 Imp <> st var
R26775:26783 Imp BreakImp SContinue constr
R26787:26789 Imp <> st' var
R26933:26933 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26941:26944 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26947:26950 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26957:26959 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26936:26938 Imp BreakImp ::x_';'_x not
R26934:26935 Imp <> c1 var
R26939:26940 Imp <> c2 var
R26945:26946 Imp <> st var
R26951:26956 Imp BreakImp SBreak constr
R26960:26962 Imp <> st' var
R26902:26904 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26907:26910 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26917:26919 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R26900:26901 Imp <> c1 var
R26905:26906 Imp <> st var
R26911:26916 Imp BreakImp SBreak constr
R26920:26922 Imp <> st' var
R27067:27067 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27092:27095 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27098:27101 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27104:27106 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27068:27071 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27073:27078 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27081:27086 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27089:27091 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27072:27072 Imp <> b var
R27079:27080 Imp <> c1 var
R27087:27088 Imp <> c2 var
R27096:27097 Imp <> st var
R27102:27103 Imp <> b1 var
R27107:27109 Imp <> st' var
R27040:27042 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27045:27048 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27051:27053 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27038:27039 Imp <> c1 var
R27043:27044 Imp <> st var
R27049:27050 Imp <> b1 var
R27054:27056 Imp <> st' var
R27021:27023 Coq.Init.Logic <> :type_scope:x_'='_x not
R27011:27015 Imp BreakImp beval def
R27020:27020 Imp <> b var
R27017:27018 Imp <> st var
R27024:27027 Coq.Init.Datatypes <> true constr
R27216:27216 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27241:27244 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27247:27250 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27253:27255 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27217:27220 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27222:27227 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27230:27235 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27238:27240 Imp BreakImp ::'IFB'_x_'THEN'_x_'ELSE'_x_'FI' not
R27221:27221 Imp <> b var
R27228:27229 Imp <> c1 var
R27236:27237 Imp <> c2 var
R27245:27246 Imp <> st var
R27251:27252 Imp <> b1 var
R27256:27258 Imp <> st' var
R27189:27191 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27194:27197 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27200:27202 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27187:27188 Imp <> c2 var
R27192:27193 Imp <> st var
R27198:27199 Imp <> b1 var
R27203:27205 Imp <> st' var
R27169:27171 Coq.Init.Logic <> :type_scope:x_'='_x not
R27159:27163 Imp BreakImp beval def
R27168:27168 Imp <> b var
R27165:27166 Imp <> st var
R27172:27176 Coq.Init.Datatypes <> false constr
R27326:27326 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27343:27346 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27349:27352 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27362:27364 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27327:27332 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27334:27337 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27339:27342 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27333:27333 Imp <> b var
R27338:27338 Imp <> c var
R27347:27348 Imp <> st var
R27353:27361 Imp BreakImp SContinue constr
R27365:27366 Imp <> st var
R27308:27310 Coq.Init.Logic <> :type_scope:x_'='_x not
R27298:27302 Imp BreakImp beval def
R27307:27307 Imp <> b var
R27304:27305 Imp <> st var
R27311:27315 Coq.Init.Datatypes <> false constr
R27532:27532 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27549:27552 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27555:27558 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27568:27570 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27533:27538 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27540:27543 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27545:27548 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27539:27539 Imp <> b var
R27544:27544 Imp <> c var
R27553:27554 Imp <> st var
R27559:27567 Imp BreakImp SContinue constr
R27571:27574 Imp <> st'' var
R27478:27478 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27495:27498 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27502:27505 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27515:27517 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27479:27484 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27486:27489 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27491:27494 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27485:27485 Imp <> b var
R27490:27490 Imp <> c var
R27499:27501 Imp <> st' var
R27506:27514 Imp BreakImp SContinue constr
R27518:27521 Imp <> st'' var
R27444:27446 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27449:27452 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27462:27464 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27443:27443 Imp <> c var
R27447:27448 Imp <> st var
R27453:27461 Imp BreakImp SContinue constr
R27465:27467 Imp <> st' var
R27426:27428 Coq.Init.Logic <> :type_scope:x_'='_x not
R27416:27420 Imp BreakImp beval def
R27425:27425 Imp <> b var
R27422:27423 Imp <> st var
R27429:27432 Coq.Init.Datatypes <> true constr
R27680:27680 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27697:27700 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27703:27706 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27716:27718 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27681:27686 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27688:27691 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27693:27696 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R27687:27687 Imp <> b var
R27692:27692 Imp <> c var
R27701:27702 Imp <> st var
R27707:27715 Imp BreakImp SContinue constr
R27719:27721 Imp <> st' var
R27649:27651 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27654:27657 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27664:27666 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R27648:27648 Imp <> c var
R27652:27653 Imp <> st var
R27658:27663 Imp BreakImp SBreak constr
R27667:27669 Imp <> st' var
R27631:27633 Coq.Init.Logic <> :type_scope:x_'='_x not
R27621:27625 Imp BreakImp beval def
R27630:27630 Imp <> b var
R27627:27628 Imp <> st var
R27634:27637 Coq.Init.Datatypes <> true constr
R27763:27767 Imp BreakImp ceval ind
not 27732 BreakImp ::x_'/'_x_'||'_x_'/'_x
prf 28112:28123 BreakImp break_ignore
R28188:28190 Coq.Init.Logic <> :type_scope:x_'='_x not
R28186:28187 Imp <> st var
R28191:28193 Imp <> st' var
R28151:28151 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28160:28163 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28166:28169 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28171:28173 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28157:28158 Imp BreakImp ::x_';'_x not
R28152:28156 Imp BreakImp ::'BREAK' not
R28159:28159 Imp <> c var
R28164:28165 Imp <> st var
R28170:28170 Imp <> s var
R28174:28176 Imp <> st' var
prf 28280:28293 BreakImp while_continue
R28361:28363 Coq.Init.Logic <> :type_scope:x_'='_x not
R28360:28360 Imp <> s var
R28364:28372 Imp BreakImp SContinue constr
R28320:28320 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28337:28340 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28343:28346 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28348:28350 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28321:28326 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28328:28331 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28333:28336 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28327:28327 Imp <> b var
R28332:28332 Imp <> c var
R28341:28342 Imp <> st var
R28347:28347 Imp <> s var
R28351:28353 Imp <> st' var
prf 28433:28452 BreakImp while_stops_on_break
R28528:28528 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28545:28548 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28551:28554 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28564:28566 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28529:28534 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28536:28539 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28541:28544 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28535:28535 Imp <> b var
R28540:28540 Imp <> c var
R28549:28550 Imp <> st var
R28555:28563 Imp BreakImp SContinue constr
R28567:28569 Imp <> st' var
R28501:28503 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28506:28509 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28516:28518 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28500:28500 Imp <> c var
R28504:28505 Imp <> st var
R28510:28515 Imp BreakImp SBreak constr
R28519:28521 Imp <> st' var
R28487:28489 Coq.Init.Logic <> :type_scope:x_'='_x not
R28477:28481 Imp BreakImp beval def
R28486:28486 Imp <> b var
R28483:28484 Imp <> st var
R28490:28493 Coq.Init.Datatypes <> true constr
R28597:28609 Imp BreakImp E_WhileLoopBr constr
R28597:28609 Imp BreakImp E_WhileLoopBr constr
prf 28640:28655 BreakImp while_break_true
R28752:28758 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28763:28764 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R28766:28768 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28773:28776 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28783:28785 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28765:28765 Imp <> c var
R28769:28772 Imp <> st'' var
R28777:28782 Imp BreakImp SBreak constr
R28786:28788 Imp <> st' var
R28739:28741 Coq.Init.Logic <> :type_scope:x_'='_x not
R28728:28732 Imp BreakImp beval def
R28738:28738 Imp <> b var
R28734:28736 Imp <> st' var
R28742:28745 Coq.Init.Datatypes <> true constr
R28680:28680 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28697:28700 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28703:28706 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28716:28718 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R28681:28686 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28688:28691 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28693:28696 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28687:28687 Imp <> b var
R28692:28692 Imp <> c var
R28701:28702 Imp <> st var
R28707:28715 Imp BreakImp SContinue constr
R28719:28721 Imp <> st' var
R28820:28825 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28827:28830 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28832:28835 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28820:28825 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28827:28830 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28832:28835 Imp BreakImp ::'WHILE'_x_'DO'_x_'END' not
R28968:28975 Coq.Init.Logic <> ex_intro constr
R28968:28975 Coq.Init.Logic <> ex_intro constr
prf 29023:29041 BreakImp ceval_deterministic
R29054:29056 Imp BreakImp com ind
R29145:29148 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29139:29141 Coq.Init.Logic <> :type_scope:x_'='_x not
R29136:29138 Imp <> st1 var
R29142:29144 Imp <> st2 var
R29151:29153 Coq.Init.Logic <> :type_scope:x_'='_x not
R29149:29150 Imp <> s1 var
R29154:29155 Imp <> s2 var
R29110:29112 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29115:29118 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29121:29123 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29109:29109 Imp <> c var
R29113:29114 Imp <> st var
R29119:29120 Imp <> s2 var
R29124:29126 Imp <> st2 var
R29083:29085 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29088:29091 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29094:29096 Imp BreakImp ::x_'/'_x_'||'_x_'/'_x not
R29082:29082 Imp <> c var
R29086:29087 Imp <> st var
R29092:29093 Imp <> s1 var
R29097:29099 Imp <> st1 var
R29399:29400 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29394:29394 Coq.Init.Logic <> :type_scope:x_'='_x not
R29410:29410 Coq.Init.Logic <> :type_scope:x_'='_x not
R29401:29409 Imp BreakImp SContinue constr
R29411:29419 Imp BreakImp SContinue constr
R29399:29400 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29394:29394 Coq.Init.Logic <> :type_scope:x_'='_x not
R29410:29410 Coq.Init.Logic <> :type_scope:x_'='_x not
R29401:29409 Imp BreakImp SContinue constr
R29411:29419 Imp BreakImp SContinue constr
R29501:29502 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29497:29497 Coq.Init.Logic <> :type_scope:x_'='_x not
R29505:29505 Coq.Init.Logic <> :type_scope:x_'='_x not
R29501:29502 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29497:29497 Coq.Init.Logic <> :type_scope:x_'='_x not
R29505:29505 Coq.Init.Logic <> :type_scope:x_'='_x not
R29586:29587 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29582:29582 Coq.Init.Logic <> :type_scope:x_'='_x not
R29597:29597 Coq.Init.Logic <> :type_scope:x_'='_x not
R29588:29596 Imp BreakImp SContinue constr
R29598:29603 Imp BreakImp SBreak constr
R29586:29587 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29582:29582 Coq.Init.Logic <> :type_scope:x_'='_x not
R29597:29597 Coq.Init.Logic <> :type_scope:x_'='_x not
R29588:29596 Imp BreakImp SContinue constr
R29598:29603 Imp BreakImp SBreak constr
R29692:29693 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29687:29687 Coq.Init.Logic <> :type_scope:x_'='_x not
R29700:29700 Coq.Init.Logic <> :type_scope:x_'='_x not
R29694:29699 Imp BreakImp SBreak constr
R29701:29709 Imp BreakImp SContinue constr
R29692:29693 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29687:29687 Coq.Init.Logic <> :type_scope:x_'='_x not
R29700:29700 Coq.Init.Logic <> :type_scope:x_'='_x not
R29694:29699 Imp BreakImp SBreak constr
R29701:29709 Imp BreakImp SContinue constr
R29785:29786 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29781:29781 Coq.Init.Logic <> :type_scope:x_'='_x not
R29793:29793 Coq.Init.Logic <> :type_scope:x_'='_x not
R29787:29792 Imp BreakImp SBreak constr
R29794:29799 Imp BreakImp SBreak constr
R29785:29786 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29781:29781 Coq.Init.Logic <> :type_scope:x_'='_x not
R29793:29793 Coq.Init.Logic <> :type_scope:x_'='_x not
R29787:29792 Imp BreakImp SBreak constr
R29794:29799 Imp BreakImp SBreak constr
R30179:30180 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30174:30174 Coq.Init.Logic <> :type_scope:x_'='_x not
R30190:30190 Coq.Init.Logic <> :type_scope:x_'='_x not
R30181:30189 Imp BreakImp SContinue constr
R30191:30199 Imp BreakImp SContinue constr
R30179:30180 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30174:30174 Coq.Init.Logic <> :type_scope:x_'='_x not
R30190:30190 Coq.Init.Logic <> :type_scope:x_'='_x not
R30181:30189 Imp BreakImp SContinue constr
R30191:30199 Imp BreakImp SContinue constr
R30294:30295 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30290:30290 Coq.Init.Logic <> :type_scope:x_'='_x not
R30305:30305 Coq.Init.Logic <> :type_scope:x_'='_x not
R30296:30304 Imp BreakImp SContinue constr
R30306:30311 Imp BreakImp SBreak constr
R30294:30295 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30290:30290 Coq.Init.Logic <> :type_scope:x_'='_x not
R30305:30305 Coq.Init.Logic <> :type_scope:x_'='_x not
R30296:30304 Imp BreakImp SContinue constr
R30306:30311 Imp BreakImp SBreak constr
R30452:30453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30447:30447 Coq.Init.Logic <> :type_scope:x_'='_x not
R30460:30460 Coq.Init.Logic <> :type_scope:x_'='_x not
R30454:30459 Imp BreakImp SBreak constr
R30461:30469 Imp BreakImp SContinue constr
R30452:30453 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30447:30447 Coq.Init.Logic <> :type_scope:x_'='_x not
R30460:30460 Coq.Init.Logic <> :type_scope:x_'='_x not
R30454:30459 Imp BreakImp SBreak constr
R30461:30469 Imp BreakImp SContinue constr
R30573:30574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30567:30569 Coq.Init.Logic <> :type_scope:x_'='_x not
R30581:30581 Coq.Init.Logic <> :type_scope:x_'='_x not
R30575:30580 Imp BreakImp SBreak constr
R30582:30587 Imp BreakImp SBreak constr
R30573:30574 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R30567:30569 Coq.Init.Logic <> :type_scope:x_'='_x not
R30581:30581 Coq.Init.Logic <> :type_scope:x_'='_x not
R30575:30580 Imp BreakImp SBreak constr
R30582:30587 Imp BreakImp SBreak constr
R30644:30651 Imp <> <> mod
def 30664:30669 <> beval2
R30677:30681 Imp <> state def
R30689:30692 Imp <> bexp ind
R30697:30700 Coq.Init.Datatypes <> bool ind
R30713:30713 Imp <> b var
R30724:30728 Imp <> BTrue constr
R30733:30736 Coq.Init.Datatypes <> true constr
R30742:30747 Imp <> BFalse constr
R30752:30756 Coq.Init.Datatypes <> false constr
R30762:30764 Imp <> BEq constr
R30775:30781 Coq.Arith.EqNat <> beq_nat def
R30798:30802 Imp <> aeval def
R30804:30805 Imp <> st var
R30784:30788 Imp <> aeval def
R30790:30791 Imp <> st var
R30815:30817 Imp <> BLe constr
R30828:30834 SfLib <> ble_nat def
R30851:30855 Imp <> aeval def
R30857:30858 Imp <> st var
R30837:30841 Imp <> aeval def
R30843:30844 Imp <> st var
R30868:30871 Imp <> BNot constr
R30879:30882 Coq.Init.Datatypes <> negb def
R30885:30889 Imp <> beval def
R30891:30892 Imp <> st var
R30902:30905 Imp <> BAnd constr
R30920:30924 Imp <> beval def
R30926:30927 Imp <> st var
R30957:30961 Coq.Init.Datatypes <> false constr
R30939:30943 Imp <> beval def
R30945:30946 Imp <> st var
prf 30979:30986 <> beval_eq
R31015:31017 Coq.Init.Logic <> :type_scope:x_'='_x not
R31005:31009 Imp <> beval def
R31014:31014 Imp <> b var
R31011:31012 Imp <> st var
R31018:31023 Imp <> beval2 def
R31028:31028 Imp <> b var
R31025:31026 Imp <> st var
ind 31088:31091 <> comf
constr 31107:31112 <> CFSkip
constr 31125:31129 <> CFAss
constr 31156:31160 <> CFSeq
constr 31189:31192 <> CFIf
constr 31229:31235 <> CFWhile
constr 31264:31268 <> CFFor
R31116:31119 Imp <> comf ind
R31147:31150 Imp <> comf ind
R31139:31142 Imp <> aexp ind
R31133:31134 SfLib <> id ind
R31180:31183 Imp <> comf ind
R31172:31175 Imp <> comf ind
R31164:31167 Imp <> comf ind
R31220:31223 Imp <> comf ind
R31212:31215 Imp <> comf ind
R31204:31207 Imp <> comf ind
R31196:31199 Imp <> bexp ind
R31255:31258 Imp <> comf ind
R31247:31250 Imp <> comf ind
R31239:31242 Imp <> bexp ind
R31304:31307 Imp <> comf ind
R31296:31299 Imp <> comf ind
R31288:31291 Imp <> comf ind
R31280:31283 Imp <> bexp ind
R31272:31275 Imp <> comf ind
R31335:31340 Imp <> CFSkip constr
not 31320 <> ::'FSKIP'
R31369:31373 Imp <> CFAss constr
not 31352 <> ::x_'F='_x
R31423:31427 Imp <> CFSeq constr
not 31404 <> ::x_'F;'_x
R31513:31519 Imp <> CFWhile constr
not 31481 <> ::'WHILEF'_x_'DO'_x_'END'
R31614:31617 Imp <> CFIf constr
not 31571 <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI'
R31726:31730 Imp <> CFFor constr
not 31674 <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END'
ind 31881:31886 <> cevalf
constr 31928:31933 <> F_Skip
constr 31976:31980 <> F_Ass
constr 32072:32076 <> F_Seq
constr 32193:32200 <> F_IfTrue
constr 32330:32338 <> F_IfFalse
constr 32469:32478 <> F_WhileEnd
constr 32567:32577 <> F_WhileLoop
constr 32744:32751 <> F_ForEnd
constr 32887:32895 <> F_ForLoop
R31907:31911 Imp <> state def
R31898:31902 Imp <> state def
R31890:31893 Imp <> comf ind
R33172:33177 Imp <> cevalf ind
R31959:31962 Imp <> ::x_'/f'_x_'||'_x not
R31965:31968 Imp <> ::x_'/f'_x_'||'_x not
R31954:31958 Imp <> ::'FSKIP' not
R31963:31964 Imp <> st var
R31969:31970 Imp <> st var
R32033:32033 Imp <> ::x_'/f'_x_'||'_x not
R32041:32045 Imp <> ::x_'/f'_x_'||'_x not
R32048:32052 Imp <> ::x_'/f'_x_'||'_x not
R32066:32066 Imp <> ::x_'/f'_x_'||'_x not
R32035:32038 Imp <> ::x_'F='_x not
R32034:32034 Imp <> x var
R32039:32040 Imp <> a1 var
R32046:32047 Imp <> st var
R32053:32058 Imp <> update def
R32065:32065 Imp <> n var
R32063:32063 Imp <> x var
R32060:32061 Imp <> st var
R32019:32021 Coq.Init.Logic <> :type_scope:x_'='_x not
R32008:32012 Imp <> aeval def
R32017:32018 Imp <> a1 var
R32014:32015 Imp <> st var
R32022:32022 Imp <> n var
R32164:32164 Imp <> ::x_'/f'_x_'||'_x not
R32173:32177 Imp <> ::x_'/f'_x_'||'_x not
R32180:32183 Imp <> ::x_'/f'_x_'||'_x not
R32167:32170 Imp <> ::x_'F;'_x not
R32165:32166 Imp <> c1 var
R32171:32172 Imp <> c2 var
R32178:32179 Imp <> st var
R32184:32187 Imp <> st'' var
R32139:32142 Imp <> ::x_'/f'_x_'||'_x not
R32146:32149 Imp <> ::x_'/f'_x_'||'_x not
R32137:32138 Imp <> c2 var
R32143:32145 Imp <> st' var
R32150:32153 Imp <> st'' var
R32114:32117 Imp <> ::x_'/f'_x_'||'_x not
R32120:32123 Imp <> ::x_'/f'_x_'||'_x not
R32112:32113 Imp <> c1 var
R32118:32119 Imp <> st var
R32124:32126 Imp <> st' var
R32285:32285 Imp <> ::x_'/f'_x_'||'_x not
R32311:32315 Imp <> ::x_'/f'_x_'||'_x not
R32318:32321 Imp <> ::x_'/f'_x_'||'_x not
R32286:32290 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32292:32297 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32300:32305 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32308:32310 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32291:32291 Imp <> b var
R32298:32299 Imp <> c1 var
R32306:32307 Imp <> c2 var
R32316:32317 Imp <> st var
R32322:32324 Imp <> st' var
R32262:32265 Imp <> ::x_'/f'_x_'||'_x not
R32268:32271 Imp <> ::x_'/f'_x_'||'_x not
R32260:32261 Imp <> c1 var
R32266:32267 Imp <> st var
R32272:32274 Imp <> st' var
R32243:32245 Coq.Init.Logic <> :type_scope:x_'='_x not
R32233:32237 Imp <> beval def
R32242:32242 Imp <> b var
R32239:32240 Imp <> st var
R32246:32249 Coq.Init.Datatypes <> true constr
R32424:32424 Imp <> ::x_'/f'_x_'||'_x not
R32450:32454 Imp <> ::x_'/f'_x_'||'_x not
R32457:32460 Imp <> ::x_'/f'_x_'||'_x not
R32425:32429 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32431:32436 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32439:32444 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32447:32449 Imp <> ::'IFBF'_x_'THEN'_x_'ELSE'_x_'FI' not
R32430:32430 Imp <> b var
R32437:32438 Imp <> c1 var
R32445:32446 Imp <> c2 var
R32455:32456 Imp <> st var
R32461:32463 Imp <> st' var
R32401:32404 Imp <> ::x_'/f'_x_'||'_x not
R32407:32410 Imp <> ::x_'/f'_x_'||'_x not
R32399:32400 Imp <> c2 var
R32405:32406 Imp <> st var
R32411:32413 Imp <> st' var
R32381:32383 Coq.Init.Logic <> :type_scope:x_'='_x not
R32371:32375 Imp <> beval def
R32380:32380 Imp <> b var
R32377:32378 Imp <> st var
R32384:32388 Coq.Init.Datatypes <> false constr
R32531:32531 Imp <> ::x_'/f'_x_'||'_x not
R32549:32553 Imp <> ::x_'/f'_x_'||'_x not
R32556:32559 Imp <> ::x_'/f'_x_'||'_x not
R32532:32538 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32540:32543 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32545:32548 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32539:32539 Imp <> b var
R32544:32544 Imp <> c var
R32554:32555 Imp <> st var
R32560:32561 Imp <> st var
R32513:32515 Coq.Init.Logic <> :type_scope:x_'='_x not
R32503:32507 Imp <> beval def
R32512:32512 Imp <> b var
R32509:32510 Imp <> st var
R32516:32520 Coq.Init.Datatypes <> false constr
R32706:32706 Imp <> ::x_'/f'_x_'||'_x not
R32724:32728 Imp <> ::x_'/f'_x_'||'_x not
R32731:32734 Imp <> ::x_'/f'_x_'||'_x not
R32707:32713 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32715:32718 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32720:32723 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32714:32714 Imp <> b var
R32719:32719 Imp <> c var
R32729:32730 Imp <> st var
R32735:32738 Imp <> st'' var
R32662:32662 Imp <> ::x_'/f'_x_'||'_x not
R32680:32684 Imp <> ::x_'/f'_x_'||'_x not
R32688:32691 Imp <> ::x_'/f'_x_'||'_x not
R32663:32669 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32671:32674 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32676:32679 Imp <> ::'WHILEF'_x_'DO'_x_'END' not
R32670:32670 Imp <> b var
R32675:32675 Imp <> c var
R32685:32687 Imp <> st' var
R32692:32695 Imp <> st'' var
R32639:32642 Imp <> ::x_'/f'_x_'||'_x not
R32645:32648 Imp <> ::x_'/f'_x_'||'_x not
R32638:32638 Imp <> c var
R32643:32644 Imp <> st var
R32649:32651 Imp <> st' var
R32621:32623 Coq.Init.Logic <> :type_scope:x_'='_x not
R32611:32615 Imp <> beval def
R32620:32620 Imp <> b var
R32617:32618 Imp <> st var
R32624:32627 Coq.Init.Datatypes <> true constr
R32842:32842 Imp <> ::x_'/f'_x_'||'_x not
R32868:32872 Imp <> ::x_'/f'_x_'||'_x not
R32875:32878 Imp <> ::x_'/f'_x_'||'_x not
R32843:32847 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R32850:32851 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R32853:32854 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R32857:32861 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R32864:32867 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R32848:32849 Imp <> c1 var
R32852:32852 Imp <> b var
R32855:32856 Imp <> c2 var
R32862:32863 Imp <> c3 var
R32873:32874 Imp <> st var
R32879:32881 Imp <> st' var
R32824:32826 Coq.Init.Logic <> :type_scope:x_'='_x not
R32813:32817 Imp <> beval def
R32823:32823 Imp <> b var
R32819:32821 Imp <> st' var
R32827:32831 Coq.Init.Datatypes <> false constr
R32790:32793 Imp <> ::x_'/f'_x_'||'_x not
R32796:32799 Imp <> ::x_'/f'_x_'||'_x not
R32788:32789 Imp <> c1 var
R32794:32795 Imp <> st var
R32800:32802 Imp <> st' var
R33094:33094 Imp <> ::x_'/f'_x_'||'_x not
R33120:33124 Imp <> ::x_'/f'_x_'||'_x not
R33127:33130 Imp <> ::x_'/f'_x_'||'_x not
R33095:33099 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33102:33103 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33105:33106 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33109:33113 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33116:33119 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33100:33101 Imp <> c1 var
R33104:33104 Imp <> b var
R33107:33108 Imp <> c2 var
R33114:33115 Imp <> c3 var
R33125:33126 Imp <> st var
R33131:33135 Imp <> st''' var
R33037:33037 Imp <> ::x_'/f'_x_'||'_x not
R33066:33070 Imp <> ::x_'/f'_x_'||'_x not
R33075:33078 Imp <> ::x_'/f'_x_'||'_x not
R33038:33042 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33048:33049 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33051:33052 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33055:33059 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33062:33065 Imp <> ::'FOR'_'('_x_','_x_','_x_')'_'DO'_x_'END' not
R33043:33047 Imp <> ::'FSKIP' not
R33050:33050 Imp <> b var
R33053:33054 Imp <> c2 var
R33060:33061 Imp <> c3 var
R33071:33074 Imp <> st'' var
R33079:33083 Imp <> st''' var
R33002:33002 Imp <> ::x_'/f'_x_'||'_x not
R33011:33015 Imp <> ::x_'/f'_x_'||'_x not
R33019:33022 Imp <> ::x_'/f'_x_'||'_x not
R33005:33008 Imp <> ::x_'F;'_x not
R33003:33004 Imp <> c3 var
R33009:33010 Imp <> c2 var
R33016:33018 Imp <> st' var
R33023:33026 Imp <> st'' var
R32985:32987 Coq.Init.Logic <> :type_scope:x_'='_x not
R32974:32978 Imp <> beval def
R32984:32984 Imp <> b var
R32980:32982 Imp <> st' var
R32988:32991 Coq.Init.Datatypes <> true constr
R32951:32954 Imp <> ::x_'/f'_x_'||'_x not
R32957:32960 Imp <> ::x_'/f'_x_'||'_x not
R32949:32950 Imp <> c1 var
R32955:32956 Imp <> st var
R32961:32963 Imp <> st' var
R33172:33177 Imp <> cevalf ind
not 33146 <> ::x_'/f'_x_'||'_x
